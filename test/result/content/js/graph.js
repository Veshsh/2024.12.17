/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 9914.0, "series": [{"data": [[0.0, 443.0], [0.1, 521.0], [0.2, 639.0], [0.3, 721.0], [0.4, 750.0], [0.5, 763.0], [0.6, 772.0], [0.7, 779.0], [0.8, 782.0], [0.9, 786.0], [1.0, 790.0], [1.1, 793.0], [1.2, 796.0], [1.3, 799.0], [1.4, 800.0], [1.5, 802.0], [1.6, 803.0], [1.7, 806.0], [1.8, 806.0], [1.9, 809.0], [2.0, 810.0], [2.1, 810.0], [2.2, 812.0], [2.3, 813.0], [2.4, 813.0], [2.5, 814.0], [2.6, 816.0], [2.7, 816.0], [2.8, 816.0], [2.9, 817.0], [3.0, 819.0], [3.1, 819.0], [3.2, 820.0], [3.3, 820.0], [3.4, 820.0], [3.5, 821.0], [3.6, 823.0], [3.7, 823.0], [3.8, 823.0], [3.9, 823.0], [4.0, 823.0], [4.1, 824.0], [4.2, 826.0], [4.3, 826.0], [4.4, 826.0], [4.5, 826.0], [4.6, 826.0], [4.7, 827.0], [4.8, 827.0], [4.9, 828.0], [5.0, 829.0], [5.1, 829.0], [5.2, 829.0], [5.3, 830.0], [5.4, 830.0], [5.5, 830.0], [5.6, 830.0], [5.7, 830.0], [5.8, 830.0], [5.9, 831.0], [6.0, 832.0], [6.1, 833.0], [6.2, 833.0], [6.3, 833.0], [6.4, 833.0], [6.5, 833.0], [6.6, 833.0], [6.7, 833.0], [6.8, 833.0], [6.9, 834.0], [7.0, 836.0], [7.1, 836.0], [7.2, 836.0], [7.3, 836.0], [7.4, 836.0], [7.5, 836.0], [7.6, 836.0], [7.7, 837.0], [7.8, 837.0], [7.9, 837.0], [8.0, 837.0], [8.1, 837.0], [8.2, 838.0], [8.3, 839.0], [8.4, 839.0], [8.5, 839.0], [8.6, 839.0], [8.7, 839.0], [8.8, 840.0], [8.9, 840.0], [9.0, 840.0], [9.1, 840.0], [9.2, 840.0], [9.3, 840.0], [9.4, 840.0], [9.5, 841.0], [9.6, 842.0], [9.7, 842.0], [9.8, 843.0], [9.9, 843.0], [10.0, 843.0], [10.1, 843.0], [10.2, 843.0], [10.3, 843.0], [10.4, 843.0], [10.5, 843.0], [10.6, 843.0], [10.7, 843.0], [10.8, 843.0], [10.9, 843.0], [11.0, 844.0], [11.1, 844.0], [11.2, 845.0], [11.3, 846.0], [11.4, 846.0], [11.5, 846.0], [11.6, 846.0], [11.7, 846.0], [11.8, 846.0], [11.9, 846.0], [12.0, 846.0], [12.1, 846.0], [12.2, 846.0], [12.3, 846.0], [12.4, 846.0], [12.5, 847.0], [12.6, 847.0], [12.7, 847.0], [12.8, 847.0], [12.9, 847.0], [13.0, 847.0], [13.1, 848.0], [13.2, 849.0], [13.3, 849.0], [13.4, 849.0], [13.5, 849.0], [13.6, 849.0], [13.7, 850.0], [13.8, 850.0], [13.9, 850.0], [14.0, 850.0], [14.1, 850.0], [14.2, 850.0], [14.3, 850.0], [14.4, 850.0], [14.5, 850.0], [14.6, 850.0], [14.7, 850.0], [14.8, 850.0], [14.9, 850.0], [15.0, 850.0], [15.1, 851.0], [15.2, 852.0], [15.3, 852.0], [15.4, 852.0], [15.5, 853.0], [15.6, 853.0], [15.7, 853.0], [15.8, 853.0], [15.9, 853.0], [16.0, 853.0], [16.1, 853.0], [16.2, 853.0], [16.3, 853.0], [16.4, 853.0], [16.5, 853.0], [16.6, 853.0], [16.7, 853.0], [16.8, 853.0], [16.9, 853.0], [17.0, 853.0], [17.1, 853.0], [17.2, 854.0], [17.3, 854.0], [17.4, 854.0], [17.5, 855.0], [17.6, 856.0], [17.7, 856.0], [17.8, 856.0], [17.9, 856.0], [18.0, 856.0], [18.1, 856.0], [18.2, 856.0], [18.3, 856.0], [18.4, 856.0], [18.5, 856.0], [18.6, 856.0], [18.7, 856.0], [18.8, 856.0], [18.9, 856.0], [19.0, 857.0], [19.1, 857.0], [19.2, 857.0], [19.3, 857.0], [19.4, 857.0], [19.5, 857.0], [19.6, 857.0], [19.7, 857.0], [19.8, 857.0], [19.9, 858.0], [20.0, 858.0], [20.1, 859.0], [20.2, 859.0], [20.3, 859.0], [20.4, 859.0], [20.5, 859.0], [20.6, 859.0], [20.7, 859.0], [20.8, 859.0], [20.9, 859.0], [21.0, 860.0], [21.1, 860.0], [21.2, 860.0], [21.3, 860.0], [21.4, 860.0], [21.5, 860.0], [21.6, 860.0], [21.7, 860.0], [21.8, 860.0], [21.9, 860.0], [22.0, 860.0], [22.1, 860.0], [22.2, 860.0], [22.3, 860.0], [22.4, 860.0], [22.5, 860.0], [22.6, 861.0], [22.7, 862.0], [22.8, 862.0], [22.9, 862.0], [23.0, 862.0], [23.1, 863.0], [23.2, 863.0], [23.3, 863.0], [23.4, 863.0], [23.5, 863.0], [23.6, 863.0], [23.7, 863.0], [23.8, 863.0], [23.9, 863.0], [24.0, 863.0], [24.1, 863.0], [24.2, 863.0], [24.3, 863.0], [24.4, 863.0], [24.5, 863.0], [24.6, 863.0], [24.7, 863.0], [24.8, 863.0], [24.9, 863.0], [25.0, 863.0], [25.1, 863.0], [25.2, 863.0], [25.3, 863.0], [25.4, 863.0], [25.5, 863.0], [25.6, 864.0], [25.7, 864.0], [25.8, 864.0], [25.9, 865.0], [26.0, 865.0], [26.1, 866.0], [26.2, 866.0], [26.3, 866.0], [26.4, 866.0], [26.5, 866.0], [26.6, 866.0], [26.7, 866.0], [26.8, 866.0], [26.9, 866.0], [27.0, 866.0], [27.1, 866.0], [27.2, 866.0], [27.3, 866.0], [27.4, 866.0], [27.5, 866.0], [27.6, 866.0], [27.7, 866.0], [27.8, 866.0], [27.9, 867.0], [28.0, 867.0], [28.1, 867.0], [28.2, 867.0], [28.3, 867.0], [28.4, 867.0], [28.5, 867.0], [28.6, 867.0], [28.7, 867.0], [28.8, 867.0], [28.9, 867.0], [29.0, 867.0], [29.1, 868.0], [29.2, 869.0], [29.3, 869.0], [29.4, 869.0], [29.5, 869.0], [29.6, 869.0], [29.7, 869.0], [29.8, 869.0], [29.9, 869.0], [30.0, 869.0], [30.1, 869.0], [30.2, 869.0], [30.3, 870.0], [30.4, 870.0], [30.5, 870.0], [30.6, 870.0], [30.7, 870.0], [30.8, 870.0], [30.9, 870.0], [31.0, 870.0], [31.1, 870.0], [31.2, 870.0], [31.3, 870.0], [31.4, 870.0], [31.5, 870.0], [31.6, 870.0], [31.7, 870.0], [31.8, 870.0], [31.9, 870.0], [32.0, 870.0], [32.1, 870.0], [32.2, 870.0], [32.3, 870.0], [32.4, 870.0], [32.5, 871.0], [32.6, 872.0], [32.7, 872.0], [32.8, 872.0], [32.9, 873.0], [33.0, 873.0], [33.1, 873.0], [33.2, 873.0], [33.3, 873.0], [33.4, 873.0], [33.5, 873.0], [33.6, 873.0], [33.7, 873.0], [33.8, 873.0], [33.9, 873.0], [34.0, 873.0], [34.1, 873.0], [34.2, 873.0], [34.3, 873.0], [34.4, 873.0], [34.5, 873.0], [34.6, 873.0], [34.7, 873.0], [34.8, 873.0], [34.9, 873.0], [35.0, 873.0], [35.1, 873.0], [35.2, 873.0], [35.3, 873.0], [35.4, 873.0], [35.5, 874.0], [35.6, 874.0], [35.7, 874.0], [35.8, 875.0], [35.9, 875.0], [36.0, 876.0], [36.1, 876.0], [36.2, 876.0], [36.3, 876.0], [36.4, 876.0], [36.5, 876.0], [36.6, 876.0], [36.7, 876.0], [36.8, 876.0], [36.9, 876.0], [37.0, 876.0], [37.1, 876.0], [37.2, 876.0], [37.3, 876.0], [37.4, 876.0], [37.5, 876.0], [37.6, 876.0], [37.7, 876.0], [37.8, 876.0], [37.9, 876.0], [38.0, 876.0], [38.1, 876.0], [38.2, 877.0], [38.3, 877.0], [38.4, 877.0], [38.5, 877.0], [38.6, 877.0], [38.7, 877.0], [38.8, 877.0], [38.9, 877.0], [39.0, 877.0], [39.1, 877.0], [39.2, 877.0], [39.3, 878.0], [39.4, 878.0], [39.5, 879.0], [39.6, 879.0], [39.7, 879.0], [39.8, 879.0], [39.9, 879.0], [40.0, 879.0], [40.1, 879.0], [40.2, 879.0], [40.3, 879.0], [40.4, 879.0], [40.5, 879.0], [40.6, 879.0], [40.7, 879.0], [40.8, 880.0], [40.9, 880.0], [41.0, 880.0], [41.1, 880.0], [41.2, 880.0], [41.3, 880.0], [41.4, 880.0], [41.5, 880.0], [41.6, 880.0], [41.7, 880.0], [41.8, 880.0], [41.9, 880.0], [42.0, 880.0], [42.1, 880.0], [42.2, 880.0], [42.3, 880.0], [42.4, 880.0], [42.5, 880.0], [42.6, 880.0], [42.7, 880.0], [42.8, 880.0], [42.9, 881.0], [43.0, 881.0], [43.1, 882.0], [43.2, 882.0], [43.3, 882.0], [43.4, 882.0], [43.5, 883.0], [43.6, 883.0], [43.7, 883.0], [43.8, 883.0], [43.9, 883.0], [44.0, 883.0], [44.1, 883.0], [44.2, 883.0], [44.3, 883.0], [44.4, 883.0], [44.5, 883.0], [44.6, 883.0], [44.7, 883.0], [44.8, 883.0], [44.9, 883.0], [45.0, 883.0], [45.1, 883.0], [45.2, 883.0], [45.3, 883.0], [45.4, 883.0], [45.5, 883.0], [45.6, 883.0], [45.7, 883.0], [45.8, 883.0], [45.9, 883.0], [46.0, 883.0], [46.1, 883.0], [46.2, 884.0], [46.3, 884.0], [46.4, 884.0], [46.5, 884.0], [46.6, 884.0], [46.7, 885.0], [46.8, 885.0], [46.9, 886.0], [47.0, 886.0], [47.1, 886.0], [47.2, 886.0], [47.3, 886.0], [47.4, 886.0], [47.5, 886.0], [47.6, 886.0], [47.7, 886.0], [47.8, 886.0], [47.9, 886.0], [48.0, 886.0], [48.1, 886.0], [48.2, 886.0], [48.3, 886.0], [48.4, 886.0], [48.5, 886.0], [48.6, 886.0], [48.7, 886.0], [48.8, 886.0], [48.9, 886.0], [49.0, 886.0], [49.1, 887.0], [49.2, 887.0], [49.3, 887.0], [49.4, 887.0], [49.5, 887.0], [49.6, 887.0], [49.7, 887.0], [49.8, 887.0], [49.9, 887.0], [50.0, 887.0], [50.1, 887.0], [50.2, 887.0], [50.3, 887.0], [50.4, 888.0], [50.5, 889.0], [50.6, 889.0], [50.7, 889.0], [50.8, 889.0], [50.9, 889.0], [51.0, 889.0], [51.1, 889.0], [51.2, 889.0], [51.3, 889.0], [51.4, 889.0], [51.5, 890.0], [51.6, 890.0], [51.7, 890.0], [51.8, 890.0], [51.9, 890.0], [52.0, 890.0], [52.1, 890.0], [52.2, 890.0], [52.3, 890.0], [52.4, 890.0], [52.5, 890.0], [52.6, 890.0], [52.7, 890.0], [52.8, 890.0], [52.9, 890.0], [53.0, 890.0], [53.1, 890.0], [53.2, 890.0], [53.3, 890.0], [53.4, 890.0], [53.5, 890.0], [53.6, 891.0], [53.7, 891.0], [53.8, 892.0], [53.9, 892.0], [54.0, 892.0], [54.1, 892.0], [54.2, 893.0], [54.3, 893.0], [54.4, 893.0], [54.5, 893.0], [54.6, 893.0], [54.7, 893.0], [54.8, 893.0], [54.9, 893.0], [55.0, 893.0], [55.1, 893.0], [55.2, 893.0], [55.3, 893.0], [55.4, 893.0], [55.5, 893.0], [55.6, 893.0], [55.7, 893.0], [55.8, 893.0], [55.9, 893.0], [56.0, 893.0], [56.1, 893.0], [56.2, 893.0], [56.3, 893.0], [56.4, 893.0], [56.5, 893.0], [56.6, 893.0], [56.7, 893.0], [56.8, 893.0], [56.9, 894.0], [57.0, 894.0], [57.1, 894.0], [57.2, 895.0], [57.3, 895.0], [57.4, 896.0], [57.5, 896.0], [57.6, 896.0], [57.7, 896.0], [57.8, 896.0], [57.9, 896.0], [58.0, 896.0], [58.1, 896.0], [58.2, 896.0], [58.3, 896.0], [58.4, 896.0], [58.5, 896.0], [58.6, 896.0], [58.7, 896.0], [58.8, 896.0], [58.9, 896.0], [59.0, 896.0], [59.1, 896.0], [59.2, 896.0], [59.3, 897.0], [59.4, 897.0], [59.5, 897.0], [59.6, 897.0], [59.7, 897.0], [59.8, 897.0], [59.9, 897.0], [60.0, 897.0], [60.1, 897.0], [60.2, 897.0], [60.3, 897.0], [60.4, 898.0], [60.5, 899.0], [60.6, 899.0], [60.7, 899.0], [60.8, 899.0], [60.9, 899.0], [61.0, 899.0], [61.1, 899.0], [61.2, 899.0], [61.3, 899.0], [61.4, 899.0], [61.5, 899.0], [61.6, 899.0], [61.7, 900.0], [61.8, 900.0], [61.9, 900.0], [62.0, 900.0], [62.1, 900.0], [62.2, 900.0], [62.3, 900.0], [62.4, 900.0], [62.5, 900.0], [62.6, 900.0], [62.7, 900.0], [62.8, 900.0], [62.9, 900.0], [63.0, 900.0], [63.1, 900.0], [63.2, 900.0], [63.3, 900.0], [63.4, 900.0], [63.5, 900.0], [63.6, 900.0], [63.7, 901.0], [63.8, 901.0], [63.9, 902.0], [64.0, 902.0], [64.1, 902.0], [64.2, 903.0], [64.3, 903.0], [64.4, 903.0], [64.5, 903.0], [64.6, 903.0], [64.7, 903.0], [64.8, 903.0], [64.9, 903.0], [65.0, 903.0], [65.1, 903.0], [65.2, 903.0], [65.3, 903.0], [65.4, 903.0], [65.5, 903.0], [65.6, 903.0], [65.7, 903.0], [65.8, 903.0], [65.9, 903.0], [66.0, 903.0], [66.1, 903.0], [66.2, 903.0], [66.3, 903.0], [66.4, 903.0], [66.5, 903.0], [66.6, 904.0], [66.7, 904.0], [66.8, 904.0], [66.9, 904.0], [67.0, 905.0], [67.1, 906.0], [67.2, 906.0], [67.3, 906.0], [67.4, 906.0], [67.5, 906.0], [67.6, 906.0], [67.7, 906.0], [67.8, 906.0], [67.9, 906.0], [68.0, 906.0], [68.1, 906.0], [68.2, 906.0], [68.3, 906.0], [68.4, 906.0], [68.5, 906.0], [68.6, 906.0], [68.7, 907.0], [68.8, 907.0], [68.9, 907.0], [69.0, 907.0], [69.1, 907.0], [69.2, 907.0], [69.3, 907.0], [69.4, 907.0], [69.5, 907.0], [69.6, 907.0], [69.7, 908.0], [69.8, 909.0], [69.9, 909.0], [70.0, 909.0], [70.1, 909.0], [70.2, 909.0], [70.3, 909.0], [70.4, 909.0], [70.5, 909.0], [70.6, 909.0], [70.7, 910.0], [70.8, 910.0], [70.9, 910.0], [71.0, 910.0], [71.1, 910.0], [71.2, 910.0], [71.3, 910.0], [71.4, 910.0], [71.5, 910.0], [71.6, 910.0], [71.7, 910.0], [71.8, 910.0], [71.9, 910.0], [72.0, 910.0], [72.1, 910.0], [72.2, 910.0], [72.3, 910.0], [72.4, 911.0], [72.5, 912.0], [72.6, 912.0], [72.7, 912.0], [72.8, 912.0], [72.9, 913.0], [73.0, 913.0], [73.1, 913.0], [73.2, 913.0], [73.3, 913.0], [73.4, 913.0], [73.5, 913.0], [73.6, 913.0], [73.7, 913.0], [73.8, 913.0], [73.9, 913.0], [74.0, 913.0], [74.1, 913.0], [74.2, 913.0], [74.3, 913.0], [74.4, 913.0], [74.5, 913.0], [74.6, 913.0], [74.7, 913.0], [74.8, 913.0], [74.9, 913.0], [75.0, 913.0], [75.1, 914.0], [75.2, 914.0], [75.3, 914.0], [75.4, 915.0], [75.5, 915.0], [75.6, 916.0], [75.7, 916.0], [75.8, 916.0], [75.9, 916.0], [76.0, 916.0], [76.1, 916.0], [76.2, 916.0], [76.3, 916.0], [76.4, 916.0], [76.5, 916.0], [76.6, 916.0], [76.7, 916.0], [76.8, 916.0], [76.9, 916.0], [77.0, 917.0], [77.1, 917.0], [77.2, 917.0], [77.3, 917.0], [77.4, 917.0], [77.5, 917.0], [77.6, 917.0], [77.7, 918.0], [77.8, 919.0], [77.9, 919.0], [78.0, 919.0], [78.1, 919.0], [78.2, 919.0], [78.3, 919.0], [78.4, 919.0], [78.5, 920.0], [78.6, 920.0], [78.7, 920.0], [78.8, 920.0], [78.9, 920.0], [79.0, 920.0], [79.1, 920.0], [79.2, 920.0], [79.3, 920.0], [79.4, 920.0], [79.5, 920.0], [79.6, 920.0], [79.7, 921.0], [79.8, 922.0], [79.9, 922.0], [80.0, 923.0], [80.1, 923.0], [80.2, 923.0], [80.3, 923.0], [80.4, 923.0], [80.5, 923.0], [80.6, 923.0], [80.7, 923.0], [80.8, 923.0], [80.9, 923.0], [81.0, 923.0], [81.1, 923.0], [81.2, 923.0], [81.3, 923.0], [81.4, 923.0], [81.5, 923.0], [81.6, 923.0], [81.7, 923.0], [81.8, 923.0], [81.9, 924.0], [82.0, 924.0], [82.1, 925.0], [82.2, 926.0], [82.3, 926.0], [82.4, 926.0], [82.5, 926.0], [82.6, 926.0], [82.7, 926.0], [82.8, 926.0], [82.9, 926.0], [83.0, 926.0], [83.1, 926.0], [83.2, 926.0], [83.3, 927.0], [83.4, 927.0], [83.5, 927.0], [83.6, 927.0], [83.7, 927.0], [83.8, 928.0], [83.9, 929.0], [84.0, 929.0], [84.1, 929.0], [84.2, 929.0], [84.3, 929.0], [84.4, 929.0], [84.5, 930.0], [84.6, 930.0], [84.7, 930.0], [84.8, 930.0], [84.9, 930.0], [85.0, 930.0], [85.1, 930.0], [85.2, 930.0], [85.3, 930.0], [85.4, 931.0], [85.5, 932.0], [85.6, 932.0], [85.7, 933.0], [85.8, 933.0], [85.9, 933.0], [86.0, 933.0], [86.1, 933.0], [86.2, 933.0], [86.3, 933.0], [86.4, 933.0], [86.5, 933.0], [86.6, 933.0], [86.7, 933.0], [86.8, 933.0], [86.9, 933.0], [87.0, 934.0], [87.1, 934.0], [87.2, 936.0], [87.3, 936.0], [87.4, 936.0], [87.5, 936.0], [87.6, 936.0], [87.7, 936.0], [87.8, 936.0], [87.9, 936.0], [88.0, 936.0], [88.1, 937.0], [88.2, 937.0], [88.3, 937.0], [88.4, 938.0], [88.5, 939.0], [88.6, 939.0], [88.7, 939.0], [88.8, 939.0], [88.9, 939.0], [89.0, 940.0], [89.1, 940.0], [89.2, 940.0], [89.3, 940.0], [89.4, 940.0], [89.5, 940.0], [89.6, 940.0], [89.7, 940.0], [89.8, 940.0], [89.9, 942.0], [90.0, 943.0], [90.1, 943.0], [90.2, 943.0], [90.3, 943.0], [90.4, 943.0], [90.5, 943.0], [90.6, 943.0], [90.7, 943.0], [90.8, 943.0], [90.9, 943.0], [91.0, 944.0], [91.1, 946.0], [91.2, 946.0], [91.3, 946.0], [91.4, 946.0], [91.5, 946.0], [91.6, 946.0], [91.7, 947.0], [91.8, 947.0], [91.9, 947.0], [92.0, 948.0], [92.1, 949.0], [92.2, 949.0], [92.3, 950.0], [92.4, 950.0], [92.5, 950.0], [92.6, 950.0], [92.7, 950.0], [92.8, 950.0], [92.9, 952.0], [93.0, 953.0], [93.1, 953.0], [93.2, 953.0], [93.3, 953.0], [93.4, 953.0], [93.5, 953.0], [93.6, 953.0], [93.7, 953.0], [93.8, 954.0], [93.9, 955.0], [94.0, 956.0], [94.1, 956.0], [94.2, 956.0], [94.3, 956.0], [94.4, 956.0], [94.5, 956.0], [94.6, 957.0], [94.7, 957.0], [94.8, 958.0], [94.9, 959.0], [95.0, 959.0], [95.1, 960.0], [95.2, 960.0], [95.3, 960.0], [95.4, 963.0], [95.5, 963.0], [95.6, 963.0], [95.7, 963.0], [95.8, 963.0], [95.9, 966.0], [96.0, 966.0], [96.1, 966.0], [96.2, 967.0], [96.3, 969.0], [96.4, 969.0], [96.5, 969.0], [96.6, 970.0], [96.7, 970.0], [96.8, 972.0], [96.9, 973.0], [97.0, 973.0], [97.1, 974.0], [97.2, 976.0], [97.3, 977.0], [97.4, 977.0], [97.5, 980.0], [97.6, 980.0], [97.7, 983.0], [97.8, 983.0], [97.9, 983.0], [98.0, 986.0], [98.1, 986.0], [98.2, 989.0], [98.3, 990.0], [98.4, 993.0], [98.5, 996.0], [98.6, 999.0], [98.7, 1002.0], [98.8, 1003.0], [98.9, 1010.0], [99.0, 1013.0], [99.1, 1021.0], [99.2, 1027.0], [99.3, 1033.0], [99.4, 1040.0], [99.5, 1050.0], [99.6, 1060.0], [99.7, 1066.0], [99.8, 1087.0], [99.9, 1133.0], [100.0, 9644.0]], "isOverall": false, "label": "HTTP Request (/)-0", "isController": false}, {"data": [[0.0, 45.0], [0.1, 72.0], [0.2, 76.0], [0.3, 76.0], [0.4, 76.0], [0.5, 76.0], [0.6, 76.0], [0.7, 76.0], [0.8, 76.0], [0.9, 76.0], [1.0, 76.0], [1.1, 76.0], [1.2, 76.0], [1.3, 76.0], [1.4, 76.0], [1.5, 76.0], [1.6, 76.0], [1.7, 77.0], [1.8, 77.0], [1.9, 77.0], [2.0, 77.0], [2.1, 77.0], [2.2, 78.0], [2.3, 78.0], [2.4, 78.0], [2.5, 79.0], [2.6, 79.0], [2.7, 79.0], [2.8, 79.0], [2.9, 79.0], [3.0, 79.0], [3.1, 79.0], [3.2, 79.0], [3.3, 79.0], [3.4, 79.0], [3.5, 79.0], [3.6, 79.0], [3.7, 79.0], [3.8, 79.0], [3.9, 79.0], [4.0, 79.0], [4.1, 79.0], [4.2, 79.0], [4.3, 79.0], [4.4, 79.0], [4.5, 79.0], [4.6, 79.0], [4.7, 79.0], [4.8, 79.0], [4.9, 80.0], [5.0, 80.0], [5.1, 80.0], [5.2, 80.0], [5.3, 80.0], [5.4, 80.0], [5.5, 80.0], [5.6, 80.0], [5.7, 80.0], [5.8, 80.0], [5.9, 80.0], [6.0, 80.0], [6.1, 80.0], [6.2, 80.0], [6.3, 80.0], [6.4, 80.0], [6.5, 80.0], [6.6, 80.0], [6.7, 80.0], [6.8, 80.0], [6.9, 80.0], [7.0, 80.0], [7.1, 80.0], [7.2, 80.0], [7.3, 80.0], [7.4, 80.0], [7.5, 80.0], [7.6, 80.0], [7.7, 80.0], [7.8, 80.0], [7.9, 80.0], [8.0, 80.0], [8.1, 80.0], [8.2, 80.0], [8.3, 81.0], [8.4, 81.0], [8.5, 81.0], [8.6, 81.0], [8.7, 82.0], [8.8, 82.0], [8.9, 82.0], [9.0, 82.0], [9.1, 82.0], [9.2, 82.0], [9.3, 82.0], [9.4, 82.0], [9.5, 82.0], [9.6, 82.0], [9.7, 82.0], [9.8, 82.0], [9.9, 82.0], [10.0, 82.0], [10.1, 82.0], [10.2, 82.0], [10.3, 83.0], [10.4, 83.0], [10.5, 83.0], [10.6, 83.0], [10.7, 83.0], [10.8, 83.0], [10.9, 83.0], [11.0, 83.0], [11.1, 83.0], [11.2, 83.0], [11.3, 83.0], [11.4, 83.0], [11.5, 83.0], [11.6, 83.0], [11.7, 83.0], [11.8, 83.0], [11.9, 83.0], [12.0, 83.0], [12.1, 83.0], [12.2, 83.0], [12.3, 83.0], [12.4, 83.0], [12.5, 83.0], [12.6, 83.0], [12.7, 83.0], [12.8, 83.0], [12.9, 83.0], [13.0, 83.0], [13.1, 83.0], [13.2, 83.0], [13.3, 83.0], [13.4, 83.0], [13.5, 83.0], [13.6, 83.0], [13.7, 83.0], [13.8, 83.0], [13.9, 83.0], [14.0, 83.0], [14.1, 83.0], [14.2, 83.0], [14.3, 83.0], [14.4, 83.0], [14.5, 83.0], [14.6, 83.0], [14.7, 83.0], [14.8, 83.0], [14.9, 83.0], [15.0, 83.0], [15.1, 83.0], [15.2, 83.0], [15.3, 83.0], [15.4, 83.0], [15.5, 83.0], [15.6, 83.0], [15.7, 83.0], [15.8, 83.0], [15.9, 83.0], [16.0, 83.0], [16.1, 83.0], [16.2, 83.0], [16.3, 83.0], [16.4, 83.0], [16.5, 83.0], [16.6, 83.0], [16.7, 83.0], [16.8, 83.0], [16.9, 83.0], [17.0, 83.0], [17.1, 83.0], [17.2, 83.0], [17.3, 83.0], [17.4, 83.0], [17.5, 83.0], [17.6, 83.0], [17.7, 83.0], [17.8, 83.0], [17.9, 83.0], [18.0, 83.0], [18.1, 83.0], [18.2, 83.0], [18.3, 83.0], [18.4, 83.0], [18.5, 84.0], [18.6, 84.0], [18.7, 84.0], [18.8, 84.0], [18.9, 84.0], [19.0, 84.0], [19.1, 84.0], [19.2, 85.0], [19.3, 85.0], [19.4, 85.0], [19.5, 85.0], [19.6, 85.0], [19.7, 85.0], [19.8, 85.0], [19.9, 86.0], [20.0, 86.0], [20.1, 86.0], [20.2, 86.0], [20.3, 86.0], [20.4, 86.0], [20.5, 86.0], [20.6, 86.0], [20.7, 86.0], [20.8, 86.0], [20.9, 86.0], [21.0, 86.0], [21.1, 86.0], [21.2, 86.0], [21.3, 86.0], [21.4, 86.0], [21.5, 86.0], [21.6, 86.0], [21.7, 86.0], [21.8, 86.0], [21.9, 86.0], [22.0, 86.0], [22.1, 86.0], [22.2, 86.0], [22.3, 86.0], [22.4, 86.0], [22.5, 86.0], [22.6, 86.0], [22.7, 86.0], [22.8, 86.0], [22.9, 86.0], [23.0, 86.0], [23.1, 86.0], [23.2, 86.0], [23.3, 86.0], [23.4, 86.0], [23.5, 86.0], [23.6, 86.0], [23.7, 86.0], [23.8, 86.0], [23.9, 86.0], [24.0, 86.0], [24.1, 86.0], [24.2, 86.0], [24.3, 86.0], [24.4, 86.0], [24.5, 86.0], [24.6, 86.0], [24.7, 86.0], [24.8, 86.0], [24.9, 86.0], [25.0, 86.0], [25.1, 86.0], [25.2, 86.0], [25.3, 86.0], [25.4, 86.0], [25.5, 86.0], [25.6, 86.0], [25.7, 86.0], [25.8, 86.0], [25.9, 86.0], [26.0, 86.0], [26.1, 86.0], [26.2, 86.0], [26.3, 86.0], [26.4, 86.0], [26.5, 86.0], [26.6, 86.0], [26.7, 86.0], [26.8, 86.0], [26.9, 86.0], [27.0, 86.0], [27.1, 86.0], [27.2, 86.0], [27.3, 86.0], [27.4, 87.0], [27.5, 87.0], [27.6, 87.0], [27.7, 87.0], [27.8, 87.0], [27.9, 87.0], [28.0, 87.0], [28.1, 87.0], [28.2, 87.0], [28.3, 87.0], [28.4, 87.0], [28.5, 87.0], [28.6, 87.0], [28.7, 87.0], [28.8, 87.0], [28.9, 87.0], [29.0, 87.0], [29.1, 87.0], [29.2, 87.0], [29.3, 87.0], [29.4, 87.0], [29.5, 87.0], [29.6, 87.0], [29.7, 87.0], [29.8, 87.0], [29.9, 87.0], [30.0, 87.0], [30.1, 87.0], [30.2, 87.0], [30.3, 88.0], [30.4, 88.0], [30.5, 88.0], [30.6, 88.0], [30.7, 89.0], [30.8, 89.0], [30.9, 89.0], [31.0, 89.0], [31.1, 89.0], [31.2, 89.0], [31.3, 89.0], [31.4, 89.0], [31.5, 89.0], [31.6, 89.0], [31.7, 89.0], [31.8, 89.0], [31.9, 89.0], [32.0, 89.0], [32.1, 89.0], [32.2, 89.0], [32.3, 89.0], [32.4, 89.0], [32.5, 89.0], [32.6, 89.0], [32.7, 89.0], [32.8, 89.0], [32.9, 89.0], [33.0, 89.0], [33.1, 89.0], [33.2, 89.0], [33.3, 89.0], [33.4, 89.0], [33.5, 89.0], [33.6, 89.0], [33.7, 89.0], [33.8, 89.0], [33.9, 89.0], [34.0, 89.0], [34.1, 89.0], [34.2, 89.0], [34.3, 89.0], [34.4, 89.0], [34.5, 89.0], [34.6, 89.0], [34.7, 89.0], [34.8, 89.0], [34.9, 89.0], [35.0, 89.0], [35.1, 89.0], [35.2, 89.0], [35.3, 89.0], [35.4, 89.0], [35.5, 89.0], [35.6, 90.0], [35.7, 90.0], [35.8, 90.0], [35.9, 90.0], [36.0, 90.0], [36.1, 90.0], [36.2, 90.0], [36.3, 90.0], [36.4, 90.0], [36.5, 90.0], [36.6, 90.0], [36.7, 90.0], [36.8, 90.0], [36.9, 90.0], [37.0, 90.0], [37.1, 90.0], [37.2, 90.0], [37.3, 90.0], [37.4, 90.0], [37.5, 90.0], [37.6, 90.0], [37.7, 90.0], [37.8, 90.0], [37.9, 90.0], [38.0, 90.0], [38.1, 90.0], [38.2, 90.0], [38.3, 90.0], [38.4, 90.0], [38.5, 90.0], [38.6, 90.0], [38.7, 90.0], [38.8, 90.0], [38.9, 90.0], [39.0, 90.0], [39.1, 90.0], [39.2, 90.0], [39.3, 90.0], [39.4, 90.0], [39.5, 90.0], [39.6, 90.0], [39.7, 90.0], [39.8, 90.0], [39.9, 90.0], [40.0, 90.0], [40.1, 90.0], [40.2, 90.0], [40.3, 90.0], [40.4, 90.0], [40.5, 90.0], [40.6, 90.0], [40.7, 90.0], [40.8, 90.0], [40.9, 90.0], [41.0, 90.0], [41.1, 90.0], [41.2, 90.0], [41.3, 90.0], [41.4, 90.0], [41.5, 90.0], [41.6, 91.0], [41.7, 91.0], [41.8, 91.0], [41.9, 91.0], [42.0, 91.0], [42.1, 92.0], [42.2, 92.0], [42.3, 92.0], [42.4, 92.0], [42.5, 92.0], [42.6, 92.0], [42.7, 92.0], [42.8, 92.0], [42.9, 92.0], [43.0, 92.0], [43.1, 92.0], [43.2, 92.0], [43.3, 92.0], [43.4, 92.0], [43.5, 92.0], [43.6, 92.0], [43.7, 92.0], [43.8, 93.0], [43.9, 93.0], [44.0, 93.0], [44.1, 93.0], [44.2, 93.0], [44.3, 93.0], [44.4, 93.0], [44.5, 93.0], [44.6, 93.0], [44.7, 93.0], [44.8, 93.0], [44.9, 93.0], [45.0, 93.0], [45.1, 93.0], [45.2, 93.0], [45.3, 93.0], [45.4, 93.0], [45.5, 93.0], [45.6, 93.0], [45.7, 93.0], [45.8, 93.0], [45.9, 93.0], [46.0, 93.0], [46.1, 93.0], [46.2, 93.0], [46.3, 93.0], [46.4, 93.0], [46.5, 93.0], [46.6, 93.0], [46.7, 93.0], [46.8, 93.0], [46.9, 93.0], [47.0, 93.0], [47.1, 93.0], [47.2, 93.0], [47.3, 93.0], [47.4, 93.0], [47.5, 93.0], [47.6, 93.0], [47.7, 93.0], [47.8, 93.0], [47.9, 93.0], [48.0, 93.0], [48.1, 93.0], [48.2, 93.0], [48.3, 93.0], [48.4, 93.0], [48.5, 93.0], [48.6, 93.0], [48.7, 93.0], [48.8, 93.0], [48.9, 93.0], [49.0, 93.0], [49.1, 93.0], [49.2, 93.0], [49.3, 93.0], [49.4, 93.0], [49.5, 93.0], [49.6, 93.0], [49.7, 93.0], [49.8, 93.0], [49.9, 93.0], [50.0, 93.0], [50.1, 93.0], [50.2, 93.0], [50.3, 93.0], [50.4, 93.0], [50.5, 93.0], [50.6, 93.0], [50.7, 93.0], [50.8, 93.0], [50.9, 93.0], [51.0, 93.0], [51.1, 93.0], [51.2, 93.0], [51.3, 93.0], [51.4, 93.0], [51.5, 93.0], [51.6, 93.0], [51.7, 93.0], [51.8, 93.0], [51.9, 93.0], [52.0, 93.0], [52.1, 93.0], [52.2, 93.0], [52.3, 93.0], [52.4, 94.0], [52.5, 94.0], [52.6, 94.0], [52.7, 94.0], [52.8, 94.0], [52.9, 94.0], [53.0, 95.0], [53.1, 95.0], [53.2, 95.0], [53.3, 95.0], [53.4, 95.0], [53.5, 95.0], [53.6, 96.0], [53.7, 96.0], [53.8, 96.0], [53.9, 96.0], [54.0, 96.0], [54.1, 96.0], [54.2, 96.0], [54.3, 96.0], [54.4, 96.0], [54.5, 96.0], [54.6, 96.0], [54.7, 96.0], [54.8, 96.0], [54.9, 96.0], [55.0, 96.0], [55.1, 96.0], [55.2, 96.0], [55.3, 96.0], [55.4, 96.0], [55.5, 96.0], [55.6, 96.0], [55.7, 96.0], [55.8, 96.0], [55.9, 96.0], [56.0, 96.0], [56.1, 96.0], [56.2, 96.0], [56.3, 96.0], [56.4, 96.0], [56.5, 96.0], [56.6, 96.0], [56.7, 96.0], [56.8, 96.0], [56.9, 96.0], [57.0, 96.0], [57.1, 96.0], [57.2, 96.0], [57.3, 96.0], [57.4, 96.0], [57.5, 96.0], [57.6, 96.0], [57.7, 96.0], [57.8, 96.0], [57.9, 96.0], [58.0, 96.0], [58.1, 96.0], [58.2, 96.0], [58.3, 96.0], [58.4, 96.0], [58.5, 96.0], [58.6, 96.0], [58.7, 96.0], [58.8, 96.0], [58.9, 96.0], [59.0, 96.0], [59.1, 96.0], [59.2, 96.0], [59.3, 96.0], [59.4, 96.0], [59.5, 96.0], [59.6, 96.0], [59.7, 96.0], [59.8, 96.0], [59.9, 96.0], [60.0, 96.0], [60.1, 96.0], [60.2, 96.0], [60.3, 96.0], [60.4, 96.0], [60.5, 96.0], [60.6, 96.0], [60.7, 96.0], [60.8, 96.0], [60.9, 96.0], [61.0, 96.0], [61.1, 96.0], [61.2, 97.0], [61.3, 97.0], [61.4, 97.0], [61.5, 97.0], [61.6, 97.0], [61.7, 97.0], [61.8, 97.0], [61.9, 97.0], [62.0, 97.0], [62.1, 97.0], [62.2, 97.0], [62.3, 97.0], [62.4, 97.0], [62.5, 97.0], [62.6, 97.0], [62.7, 97.0], [62.8, 97.0], [62.9, 97.0], [63.0, 97.0], [63.1, 97.0], [63.2, 97.0], [63.3, 97.0], [63.4, 97.0], [63.5, 97.0], [63.6, 97.0], [63.7, 97.0], [63.8, 98.0], [63.9, 98.0], [64.0, 98.0], [64.1, 98.0], [64.2, 98.0], [64.3, 99.0], [64.4, 99.0], [64.5, 99.0], [64.6, 99.0], [64.7, 99.0], [64.8, 99.0], [64.9, 99.0], [65.0, 99.0], [65.1, 99.0], [65.2, 99.0], [65.3, 99.0], [65.4, 99.0], [65.5, 99.0], [65.6, 99.0], [65.7, 99.0], [65.8, 99.0], [65.9, 99.0], [66.0, 99.0], [66.1, 99.0], [66.2, 99.0], [66.3, 99.0], [66.4, 99.0], [66.5, 99.0], [66.6, 99.0], [66.7, 99.0], [66.8, 99.0], [66.9, 99.0], [67.0, 99.0], [67.1, 99.0], [67.2, 99.0], [67.3, 99.0], [67.4, 99.0], [67.5, 99.0], [67.6, 99.0], [67.7, 99.0], [67.8, 99.0], [67.9, 99.0], [68.0, 99.0], [68.1, 99.0], [68.2, 99.0], [68.3, 99.0], [68.4, 99.0], [68.5, 100.0], [68.6, 100.0], [68.7, 100.0], [68.8, 100.0], [68.9, 100.0], [69.0, 100.0], [69.1, 100.0], [69.2, 100.0], [69.3, 100.0], [69.4, 100.0], [69.5, 100.0], [69.6, 100.0], [69.7, 100.0], [69.8, 100.0], [69.9, 100.0], [70.0, 100.0], [70.1, 100.0], [70.2, 100.0], [70.3, 100.0], [70.4, 100.0], [70.5, 100.0], [70.6, 100.0], [70.7, 100.0], [70.8, 100.0], [70.9, 100.0], [71.0, 100.0], [71.1, 100.0], [71.2, 100.0], [71.3, 100.0], [71.4, 100.0], [71.5, 100.0], [71.6, 100.0], [71.7, 100.0], [71.8, 100.0], [71.9, 100.0], [72.0, 100.0], [72.1, 100.0], [72.2, 100.0], [72.3, 100.0], [72.4, 100.0], [72.5, 100.0], [72.6, 100.0], [72.7, 100.0], [72.8, 100.0], [72.9, 100.0], [73.0, 100.0], [73.1, 100.0], [73.2, 100.0], [73.3, 100.0], [73.4, 101.0], [73.5, 101.0], [73.6, 101.0], [73.7, 101.0], [73.8, 102.0], [73.9, 102.0], [74.0, 102.0], [74.1, 102.0], [74.2, 102.0], [74.3, 102.0], [74.4, 102.0], [74.5, 102.0], [74.6, 102.0], [74.7, 102.0], [74.8, 102.0], [74.9, 103.0], [75.0, 103.0], [75.1, 103.0], [75.2, 103.0], [75.3, 103.0], [75.4, 103.0], [75.5, 103.0], [75.6, 103.0], [75.7, 103.0], [75.8, 103.0], [75.9, 103.0], [76.0, 103.0], [76.1, 103.0], [76.2, 103.0], [76.3, 103.0], [76.4, 103.0], [76.5, 103.0], [76.6, 103.0], [76.7, 103.0], [76.8, 103.0], [76.9, 103.0], [77.0, 103.0], [77.1, 103.0], [77.2, 103.0], [77.3, 103.0], [77.4, 103.0], [77.5, 103.0], [77.6, 103.0], [77.7, 103.0], [77.8, 103.0], [77.9, 103.0], [78.0, 103.0], [78.1, 103.0], [78.2, 103.0], [78.3, 103.0], [78.4, 103.0], [78.5, 103.0], [78.6, 103.0], [78.7, 103.0], [78.8, 103.0], [78.9, 103.0], [79.0, 103.0], [79.1, 103.0], [79.2, 103.0], [79.3, 103.0], [79.4, 103.0], [79.5, 103.0], [79.6, 103.0], [79.7, 103.0], [79.8, 103.0], [79.9, 103.0], [80.0, 103.0], [80.1, 103.0], [80.2, 103.0], [80.3, 103.0], [80.4, 103.0], [80.5, 103.0], [80.6, 103.0], [80.7, 103.0], [80.8, 103.0], [80.9, 103.0], [81.0, 103.0], [81.1, 103.0], [81.2, 103.0], [81.3, 104.0], [81.4, 104.0], [81.5, 104.0], [81.6, 104.0], [81.7, 104.0], [81.8, 105.0], [81.9, 105.0], [82.0, 105.0], [82.1, 106.0], [82.2, 106.0], [82.3, 106.0], [82.4, 106.0], [82.5, 106.0], [82.6, 106.0], [82.7, 106.0], [82.8, 106.0], [82.9, 106.0], [83.0, 106.0], [83.1, 106.0], [83.2, 106.0], [83.3, 106.0], [83.4, 106.0], [83.5, 106.0], [83.6, 106.0], [83.7, 106.0], [83.8, 106.0], [83.9, 106.0], [84.0, 106.0], [84.1, 106.0], [84.2, 106.0], [84.3, 106.0], [84.4, 106.0], [84.5, 106.0], [84.6, 106.0], [84.7, 106.0], [84.8, 106.0], [84.9, 106.0], [85.0, 106.0], [85.1, 106.0], [85.2, 106.0], [85.3, 106.0], [85.4, 106.0], [85.5, 106.0], [85.6, 106.0], [85.7, 106.0], [85.8, 106.0], [85.9, 106.0], [86.0, 106.0], [86.1, 106.0], [86.2, 106.0], [86.3, 106.0], [86.4, 107.0], [86.5, 107.0], [86.6, 107.0], [86.7, 107.0], [86.8, 107.0], [86.9, 107.0], [87.0, 107.0], [87.1, 107.0], [87.2, 107.0], [87.3, 107.0], [87.4, 107.0], [87.5, 107.0], [87.6, 107.0], [87.7, 107.0], [87.8, 108.0], [87.9, 108.0], [88.0, 108.0], [88.1, 109.0], [88.2, 109.0], [88.3, 109.0], [88.4, 109.0], [88.5, 109.0], [88.6, 109.0], [88.7, 109.0], [88.8, 109.0], [88.9, 109.0], [89.0, 109.0], [89.1, 109.0], [89.2, 109.0], [89.3, 109.0], [89.4, 109.0], [89.5, 109.0], [89.6, 109.0], [89.7, 109.0], [89.8, 109.0], [89.9, 110.0], [90.0, 110.0], [90.1, 110.0], [90.2, 110.0], [90.3, 110.0], [90.4, 110.0], [90.5, 110.0], [90.6, 110.0], [90.7, 110.0], [90.8, 110.0], [90.9, 110.0], [91.0, 110.0], [91.1, 110.0], [91.2, 110.0], [91.3, 110.0], [91.4, 110.0], [91.5, 110.0], [91.6, 110.0], [91.7, 110.0], [91.8, 110.0], [91.9, 110.0], [92.0, 110.0], [92.1, 110.0], [92.2, 111.0], [92.3, 111.0], [92.4, 112.0], [92.5, 112.0], [92.6, 112.0], [92.7, 112.0], [92.8, 113.0], [92.9, 113.0], [93.0, 113.0], [93.1, 113.0], [93.2, 113.0], [93.3, 113.0], [93.4, 113.0], [93.5, 113.0], [93.6, 113.0], [93.7, 113.0], [93.8, 113.0], [93.9, 113.0], [94.0, 113.0], [94.1, 113.0], [94.2, 113.0], [94.3, 113.0], [94.4, 113.0], [94.5, 113.0], [94.6, 113.0], [94.7, 113.0], [94.8, 113.0], [94.9, 113.0], [95.0, 114.0], [95.1, 114.0], [95.2, 114.0], [95.3, 115.0], [95.4, 116.0], [95.5, 116.0], [95.6, 116.0], [95.7, 116.0], [95.8, 116.0], [95.9, 116.0], [96.0, 116.0], [96.1, 116.0], [96.2, 116.0], [96.3, 116.0], [96.4, 117.0], [96.5, 117.0], [96.6, 117.0], [96.7, 117.0], [96.8, 117.0], [96.9, 119.0], [97.0, 119.0], [97.1, 119.0], [97.2, 119.0], [97.3, 119.0], [97.4, 120.0], [97.5, 120.0], [97.6, 120.0], [97.7, 120.0], [97.8, 120.0], [97.9, 122.0], [98.0, 122.0], [98.1, 123.0], [98.2, 123.0], [98.3, 123.0], [98.4, 123.0], [98.5, 123.0], [98.6, 125.0], [98.7, 126.0], [98.8, 126.0], [98.9, 126.0], [99.0, 129.0], [99.1, 129.0], [99.2, 130.0], [99.3, 133.0], [99.4, 136.0], [99.5, 139.0], [99.6, 144.0], [99.7, 152.0], [99.8, 157.0], [99.9, 167.0], [100.0, 189.0]], "isOverall": false, "label": "HTTP Request (/list)", "isController": false}, {"data": [[0.0, 36.0], [0.1, 41.0], [0.2, 45.0], [0.3, 47.0], [0.4, 49.0], [0.5, 52.0], [0.6, 54.0], [0.7, 56.0], [0.8, 59.0], [0.9, 62.0], [1.0, 64.0], [1.1, 65.0], [1.2, 67.0], [1.3, 70.0], [1.4, 71.0], [1.5, 73.0], [1.6, 75.0], [1.7, 76.0], [1.8, 76.0], [1.9, 76.0], [2.0, 76.0], [2.1, 76.0], [2.2, 76.0], [2.3, 76.0], [2.4, 76.0], [2.5, 76.0], [2.6, 76.0], [2.7, 76.0], [2.8, 76.0], [2.9, 76.0], [3.0, 76.0], [3.1, 77.0], [3.2, 77.0], [3.3, 77.0], [3.4, 77.0], [3.5, 77.0], [3.6, 77.0], [3.7, 77.0], [3.8, 77.0], [3.9, 77.0], [4.0, 77.0], [4.1, 77.0], [4.2, 77.0], [4.3, 78.0], [4.4, 79.0], [4.5, 79.0], [4.6, 79.0], [4.7, 79.0], [4.8, 79.0], [4.9, 79.0], [5.0, 79.0], [5.1, 79.0], [5.2, 79.0], [5.3, 79.0], [5.4, 79.0], [5.5, 79.0], [5.6, 79.0], [5.7, 79.0], [5.8, 79.0], [5.9, 80.0], [6.0, 80.0], [6.1, 80.0], [6.2, 80.0], [6.3, 80.0], [6.4, 80.0], [6.5, 80.0], [6.6, 80.0], [6.7, 80.0], [6.8, 80.0], [6.9, 80.0], [7.0, 80.0], [7.1, 80.0], [7.2, 80.0], [7.3, 80.0], [7.4, 80.0], [7.5, 80.0], [7.6, 80.0], [7.7, 80.0], [7.8, 80.0], [7.9, 80.0], [8.0, 80.0], [8.1, 80.0], [8.2, 80.0], [8.3, 80.0], [8.4, 80.0], [8.5, 80.0], [8.6, 80.0], [8.7, 80.0], [8.8, 80.0], [8.9, 80.0], [9.0, 80.0], [9.1, 80.0], [9.2, 80.0], [9.3, 80.0], [9.4, 80.0], [9.5, 80.0], [9.6, 80.0], [9.7, 80.0], [9.8, 80.0], [9.9, 80.0], [10.0, 80.0], [10.1, 80.0], [10.2, 80.0], [10.3, 80.0], [10.4, 80.0], [10.5, 80.0], [10.6, 80.0], [10.7, 80.0], [10.8, 80.0], [10.9, 80.0], [11.0, 80.0], [11.1, 81.0], [11.2, 81.0], [11.3, 81.0], [11.4, 81.0], [11.5, 81.0], [11.6, 82.0], [11.7, 82.0], [11.8, 82.0], [11.9, 82.0], [12.0, 83.0], [12.1, 83.0], [12.2, 83.0], [12.3, 83.0], [12.4, 83.0], [12.5, 83.0], [12.6, 83.0], [12.7, 83.0], [12.8, 83.0], [12.9, 83.0], [13.0, 83.0], [13.1, 83.0], [13.2, 83.0], [13.3, 83.0], [13.4, 83.0], [13.5, 83.0], [13.6, 83.0], [13.7, 83.0], [13.8, 83.0], [13.9, 83.0], [14.0, 83.0], [14.1, 83.0], [14.2, 83.0], [14.3, 83.0], [14.4, 83.0], [14.5, 83.0], [14.6, 83.0], [14.7, 83.0], [14.8, 83.0], [14.9, 83.0], [15.0, 83.0], [15.1, 83.0], [15.2, 83.0], [15.3, 83.0], [15.4, 83.0], [15.5, 83.0], [15.6, 83.0], [15.7, 83.0], [15.8, 83.0], [15.9, 83.0], [16.0, 83.0], [16.1, 83.0], [16.2, 83.0], [16.3, 83.0], [16.4, 83.0], [16.5, 83.0], [16.6, 83.0], [16.7, 83.0], [16.8, 83.0], [16.9, 83.0], [17.0, 83.0], [17.1, 83.0], [17.2, 83.0], [17.3, 83.0], [17.4, 83.0], [17.5, 83.0], [17.6, 83.0], [17.7, 83.0], [17.8, 83.0], [17.9, 83.0], [18.0, 83.0], [18.1, 83.0], [18.2, 83.0], [18.3, 83.0], [18.4, 83.0], [18.5, 83.0], [18.6, 83.0], [18.7, 83.0], [18.8, 83.0], [18.9, 83.0], [19.0, 83.0], [19.1, 83.0], [19.2, 83.0], [19.3, 83.0], [19.4, 83.0], [19.5, 83.0], [19.6, 83.0], [19.7, 83.0], [19.8, 83.0], [19.9, 84.0], [20.0, 84.0], [20.1, 84.0], [20.2, 84.0], [20.3, 84.0], [20.4, 84.0], [20.5, 84.0], [20.6, 84.0], [20.7, 84.0], [20.8, 84.0], [20.9, 84.0], [21.0, 84.0], [21.1, 84.0], [21.2, 84.0], [21.3, 84.0], [21.4, 85.0], [21.5, 85.0], [21.6, 85.0], [21.7, 85.0], [21.8, 85.0], [21.9, 86.0], [22.0, 86.0], [22.1, 86.0], [22.2, 86.0], [22.3, 86.0], [22.4, 86.0], [22.5, 86.0], [22.6, 86.0], [22.7, 86.0], [22.8, 86.0], [22.9, 86.0], [23.0, 86.0], [23.1, 86.0], [23.2, 86.0], [23.3, 86.0], [23.4, 86.0], [23.5, 86.0], [23.6, 86.0], [23.7, 86.0], [23.8, 86.0], [23.9, 86.0], [24.0, 86.0], [24.1, 86.0], [24.2, 86.0], [24.3, 86.0], [24.4, 86.0], [24.5, 86.0], [24.6, 86.0], [24.7, 86.0], [24.8, 86.0], [24.9, 86.0], [25.0, 86.0], [25.1, 86.0], [25.2, 86.0], [25.3, 86.0], [25.4, 86.0], [25.5, 86.0], [25.6, 86.0], [25.7, 86.0], [25.8, 86.0], [25.9, 86.0], [26.0, 86.0], [26.1, 86.0], [26.2, 86.0], [26.3, 86.0], [26.4, 86.0], [26.5, 86.0], [26.6, 86.0], [26.7, 86.0], [26.8, 86.0], [26.9, 86.0], [27.0, 86.0], [27.1, 86.0], [27.2, 86.0], [27.3, 86.0], [27.4, 87.0], [27.5, 87.0], [27.6, 87.0], [27.7, 87.0], [27.8, 87.0], [27.9, 87.0], [28.0, 87.0], [28.1, 87.0], [28.2, 87.0], [28.3, 87.0], [28.4, 87.0], [28.5, 87.0], [28.6, 87.0], [28.7, 87.0], [28.8, 87.0], [28.9, 87.0], [29.0, 87.0], [29.1, 87.0], [29.2, 87.0], [29.3, 87.0], [29.4, 87.0], [29.5, 87.0], [29.6, 87.0], [29.7, 87.0], [29.8, 87.0], [29.9, 87.0], [30.0, 87.0], [30.1, 87.0], [30.2, 87.0], [30.3, 87.0], [30.4, 87.0], [30.5, 87.0], [30.6, 87.0], [30.7, 87.0], [30.8, 87.0], [30.9, 87.0], [31.0, 87.0], [31.1, 87.0], [31.2, 87.0], [31.3, 87.0], [31.4, 87.0], [31.5, 87.0], [31.6, 87.0], [31.7, 87.0], [31.8, 87.0], [31.9, 87.0], [32.0, 88.0], [32.1, 88.0], [32.2, 88.0], [32.3, 88.0], [32.4, 88.0], [32.5, 89.0], [32.6, 89.0], [32.7, 89.0], [32.8, 89.0], [32.9, 89.0], [33.0, 89.0], [33.1, 89.0], [33.2, 89.0], [33.3, 89.0], [33.4, 89.0], [33.5, 89.0], [33.6, 89.0], [33.7, 89.0], [33.8, 89.0], [33.9, 89.0], [34.0, 89.0], [34.1, 89.0], [34.2, 89.0], [34.3, 89.0], [34.4, 89.0], [34.5, 89.0], [34.6, 89.0], [34.7, 89.0], [34.8, 89.0], [34.9, 89.0], [35.0, 89.0], [35.1, 89.0], [35.2, 89.0], [35.3, 90.0], [35.4, 90.0], [35.5, 90.0], [35.6, 90.0], [35.7, 90.0], [35.8, 90.0], [35.9, 90.0], [36.0, 90.0], [36.1, 90.0], [36.2, 90.0], [36.3, 90.0], [36.4, 90.0], [36.5, 90.0], [36.6, 90.0], [36.7, 90.0], [36.8, 90.0], [36.9, 90.0], [37.0, 90.0], [37.1, 90.0], [37.2, 90.0], [37.3, 90.0], [37.4, 90.0], [37.5, 90.0], [37.6, 90.0], [37.7, 90.0], [37.8, 90.0], [37.9, 90.0], [38.0, 90.0], [38.1, 90.0], [38.2, 90.0], [38.3, 90.0], [38.4, 90.0], [38.5, 90.0], [38.6, 90.0], [38.7, 90.0], [38.8, 90.0], [38.9, 90.0], [39.0, 90.0], [39.1, 90.0], [39.2, 90.0], [39.3, 90.0], [39.4, 90.0], [39.5, 90.0], [39.6, 90.0], [39.7, 90.0], [39.8, 90.0], [39.9, 90.0], [40.0, 90.0], [40.1, 90.0], [40.2, 90.0], [40.3, 90.0], [40.4, 90.0], [40.5, 90.0], [40.6, 90.0], [40.7, 90.0], [40.8, 90.0], [40.9, 90.0], [41.0, 90.0], [41.1, 90.0], [41.2, 90.0], [41.3, 90.0], [41.4, 90.0], [41.5, 90.0], [41.6, 90.0], [41.7, 90.0], [41.8, 90.0], [41.9, 90.0], [42.0, 90.0], [42.1, 90.0], [42.2, 90.0], [42.3, 90.0], [42.4, 90.0], [42.5, 90.0], [42.6, 90.0], [42.7, 90.0], [42.8, 90.0], [42.9, 90.0], [43.0, 91.0], [43.1, 91.0], [43.2, 91.0], [43.3, 91.0], [43.4, 91.0], [43.5, 92.0], [43.6, 92.0], [43.7, 92.0], [43.8, 92.0], [43.9, 92.0], [44.0, 92.0], [44.1, 93.0], [44.2, 93.0], [44.3, 93.0], [44.4, 93.0], [44.5, 93.0], [44.6, 93.0], [44.7, 93.0], [44.8, 93.0], [44.9, 93.0], [45.0, 93.0], [45.1, 93.0], [45.2, 93.0], [45.3, 93.0], [45.4, 93.0], [45.5, 93.0], [45.6, 93.0], [45.7, 93.0], [45.8, 93.0], [45.9, 93.0], [46.0, 93.0], [46.1, 93.0], [46.2, 93.0], [46.3, 93.0], [46.4, 93.0], [46.5, 93.0], [46.6, 93.0], [46.7, 93.0], [46.8, 93.0], [46.9, 93.0], [47.0, 93.0], [47.1, 93.0], [47.2, 93.0], [47.3, 93.0], [47.4, 93.0], [47.5, 93.0], [47.6, 93.0], [47.7, 93.0], [47.8, 93.0], [47.9, 93.0], [48.0, 93.0], [48.1, 93.0], [48.2, 93.0], [48.3, 93.0], [48.4, 93.0], [48.5, 93.0], [48.6, 93.0], [48.7, 93.0], [48.8, 93.0], [48.9, 93.0], [49.0, 93.0], [49.1, 93.0], [49.2, 93.0], [49.3, 93.0], [49.4, 93.0], [49.5, 93.0], [49.6, 93.0], [49.7, 93.0], [49.8, 93.0], [49.9, 93.0], [50.0, 93.0], [50.1, 93.0], [50.2, 93.0], [50.3, 93.0], [50.4, 93.0], [50.5, 93.0], [50.6, 93.0], [50.7, 93.0], [50.8, 93.0], [50.9, 93.0], [51.0, 93.0], [51.1, 93.0], [51.2, 93.0], [51.3, 93.0], [51.4, 93.0], [51.5, 93.0], [51.6, 93.0], [51.7, 93.0], [51.8, 93.0], [51.9, 93.0], [52.0, 93.0], [52.1, 93.0], [52.2, 93.0], [52.3, 93.0], [52.4, 93.0], [52.5, 93.0], [52.6, 93.0], [52.7, 94.0], [52.8, 94.0], [52.9, 94.0], [53.0, 94.0], [53.1, 94.0], [53.2, 94.0], [53.3, 94.0], [53.4, 94.0], [53.5, 94.0], [53.6, 94.0], [53.7, 94.0], [53.8, 94.0], [53.9, 94.0], [54.0, 94.0], [54.1, 94.0], [54.2, 95.0], [54.3, 95.0], [54.4, 95.0], [54.5, 95.0], [54.6, 95.0], [54.7, 96.0], [54.8, 96.0], [54.9, 96.0], [55.0, 96.0], [55.1, 96.0], [55.2, 96.0], [55.3, 96.0], [55.4, 96.0], [55.5, 96.0], [55.6, 96.0], [55.7, 96.0], [55.8, 96.0], [55.9, 96.0], [56.0, 96.0], [56.1, 96.0], [56.2, 96.0], [56.3, 96.0], [56.4, 96.0], [56.5, 96.0], [56.6, 96.0], [56.7, 96.0], [56.8, 96.0], [56.9, 96.0], [57.0, 96.0], [57.1, 96.0], [57.2, 96.0], [57.3, 96.0], [57.4, 96.0], [57.5, 96.0], [57.6, 96.0], [57.7, 96.0], [57.8, 96.0], [57.9, 96.0], [58.0, 96.0], [58.1, 96.0], [58.2, 96.0], [58.3, 96.0], [58.4, 96.0], [58.5, 96.0], [58.6, 96.0], [58.7, 96.0], [58.8, 96.0], [58.9, 96.0], [59.0, 96.0], [59.1, 96.0], [59.2, 96.0], [59.3, 96.0], [59.4, 96.0], [59.5, 96.0], [59.6, 96.0], [59.7, 96.0], [59.8, 96.0], [59.9, 96.0], [60.0, 96.0], [60.1, 96.0], [60.2, 96.0], [60.3, 96.0], [60.4, 96.0], [60.5, 96.0], [60.6, 96.0], [60.7, 97.0], [60.8, 97.0], [60.9, 97.0], [61.0, 97.0], [61.1, 97.0], [61.2, 97.0], [61.3, 97.0], [61.4, 97.0], [61.5, 97.0], [61.6, 97.0], [61.7, 97.0], [61.8, 97.0], [61.9, 97.0], [62.0, 97.0], [62.1, 97.0], [62.2, 97.0], [62.3, 97.0], [62.4, 97.0], [62.5, 97.0], [62.6, 97.0], [62.7, 97.0], [62.8, 97.0], [62.9, 97.0], [63.0, 97.0], [63.1, 97.0], [63.2, 97.0], [63.3, 97.0], [63.4, 97.0], [63.5, 97.0], [63.6, 97.0], [63.7, 97.0], [63.8, 97.0], [63.9, 97.0], [64.0, 97.0], [64.1, 97.0], [64.2, 97.0], [64.3, 97.0], [64.4, 97.0], [64.5, 97.0], [64.6, 97.0], [64.7, 97.0], [64.8, 97.0], [64.9, 97.0], [65.0, 98.0], [65.1, 98.0], [65.2, 98.0], [65.3, 98.0], [65.4, 99.0], [65.5, 99.0], [65.6, 99.0], [65.7, 99.0], [65.8, 99.0], [65.9, 99.0], [66.0, 99.0], [66.1, 99.0], [66.2, 99.0], [66.3, 99.0], [66.4, 99.0], [66.5, 99.0], [66.6, 99.0], [66.7, 99.0], [66.8, 99.0], [66.9, 99.0], [67.0, 99.0], [67.1, 99.0], [67.2, 99.0], [67.3, 99.0], [67.4, 99.0], [67.5, 99.0], [67.6, 99.0], [67.7, 99.0], [67.8, 100.0], [67.9, 100.0], [68.0, 100.0], [68.1, 100.0], [68.2, 100.0], [68.3, 100.0], [68.4, 100.0], [68.5, 100.0], [68.6, 100.0], [68.7, 100.0], [68.8, 100.0], [68.9, 100.0], [69.0, 100.0], [69.1, 100.0], [69.2, 100.0], [69.3, 100.0], [69.4, 100.0], [69.5, 100.0], [69.6, 100.0], [69.7, 100.0], [69.8, 100.0], [69.9, 100.0], [70.0, 100.0], [70.1, 100.0], [70.2, 100.0], [70.3, 100.0], [70.4, 100.0], [70.5, 100.0], [70.6, 100.0], [70.7, 100.0], [70.8, 100.0], [70.9, 100.0], [71.0, 100.0], [71.1, 100.0], [71.2, 100.0], [71.3, 100.0], [71.4, 100.0], [71.5, 100.0], [71.6, 100.0], [71.7, 100.0], [71.8, 100.0], [71.9, 100.0], [72.0, 100.0], [72.1, 100.0], [72.2, 100.0], [72.3, 100.0], [72.4, 100.0], [72.5, 100.0], [72.6, 100.0], [72.7, 100.0], [72.8, 100.0], [72.9, 100.0], [73.0, 100.0], [73.1, 100.0], [73.2, 100.0], [73.3, 100.0], [73.4, 100.0], [73.5, 100.0], [73.6, 100.0], [73.7, 100.0], [73.8, 100.0], [73.9, 100.0], [74.0, 100.0], [74.1, 100.0], [74.2, 100.0], [74.3, 101.0], [74.4, 101.0], [74.5, 101.0], [74.6, 102.0], [74.7, 102.0], [74.8, 102.0], [74.9, 103.0], [75.0, 103.0], [75.1, 103.0], [75.2, 103.0], [75.3, 103.0], [75.4, 103.0], [75.5, 103.0], [75.6, 103.0], [75.7, 103.0], [75.8, 103.0], [75.9, 103.0], [76.0, 103.0], [76.1, 103.0], [76.2, 103.0], [76.3, 103.0], [76.4, 103.0], [76.5, 103.0], [76.6, 103.0], [76.7, 103.0], [76.8, 103.0], [76.9, 103.0], [77.0, 103.0], [77.1, 103.0], [77.2, 103.0], [77.3, 103.0], [77.4, 103.0], [77.5, 103.0], [77.6, 103.0], [77.7, 103.0], [77.8, 103.0], [77.9, 103.0], [78.0, 103.0], [78.1, 103.0], [78.2, 103.0], [78.3, 103.0], [78.4, 103.0], [78.5, 103.0], [78.6, 103.0], [78.7, 103.0], [78.8, 103.0], [78.9, 103.0], [79.0, 103.0], [79.1, 103.0], [79.2, 103.0], [79.3, 103.0], [79.4, 103.0], [79.5, 103.0], [79.6, 103.0], [79.7, 103.0], [79.8, 103.0], [79.9, 103.0], [80.0, 103.0], [80.1, 103.0], [80.2, 103.0], [80.3, 103.0], [80.4, 103.0], [80.5, 103.0], [80.6, 103.0], [80.7, 103.0], [80.8, 103.0], [80.9, 103.0], [81.0, 103.0], [81.1, 103.0], [81.2, 103.0], [81.3, 104.0], [81.4, 104.0], [81.5, 104.0], [81.6, 104.0], [81.7, 104.0], [81.8, 104.0], [81.9, 104.0], [82.0, 104.0], [82.1, 104.0], [82.2, 104.0], [82.3, 104.0], [82.4, 105.0], [82.5, 105.0], [82.6, 106.0], [82.7, 106.0], [82.8, 106.0], [82.9, 106.0], [83.0, 106.0], [83.1, 106.0], [83.2, 106.0], [83.3, 106.0], [83.4, 106.0], [83.5, 106.0], [83.6, 106.0], [83.7, 106.0], [83.8, 106.0], [83.9, 106.0], [84.0, 106.0], [84.1, 106.0], [84.2, 106.0], [84.3, 106.0], [84.4, 106.0], [84.5, 106.0], [84.6, 106.0], [84.7, 106.0], [84.8, 106.0], [84.9, 106.0], [85.0, 106.0], [85.1, 106.0], [85.2, 106.0], [85.3, 106.0], [85.4, 106.0], [85.5, 106.0], [85.6, 106.0], [85.7, 106.0], [85.8, 106.0], [85.9, 107.0], [86.0, 107.0], [86.1, 107.0], [86.2, 107.0], [86.3, 107.0], [86.4, 107.0], [86.5, 107.0], [86.6, 107.0], [86.7, 107.0], [86.8, 107.0], [86.9, 107.0], [87.0, 107.0], [87.1, 107.0], [87.2, 107.0], [87.3, 107.0], [87.4, 107.0], [87.5, 107.0], [87.6, 107.0], [87.7, 107.0], [87.8, 107.0], [87.9, 107.0], [88.0, 107.0], [88.1, 107.0], [88.2, 107.0], [88.3, 107.0], [88.4, 108.0], [88.5, 108.0], [88.6, 109.0], [88.7, 109.0], [88.8, 109.0], [88.9, 109.0], [89.0, 109.0], [89.1, 109.0], [89.2, 109.0], [89.3, 109.0], [89.4, 109.0], [89.5, 109.0], [89.6, 109.0], [89.7, 110.0], [89.8, 110.0], [89.9, 110.0], [90.0, 110.0], [90.1, 110.0], [90.2, 110.0], [90.3, 110.0], [90.4, 110.0], [90.5, 110.0], [90.6, 110.0], [90.7, 110.0], [90.8, 110.0], [90.9, 110.0], [91.0, 110.0], [91.1, 110.0], [91.2, 110.0], [91.3, 110.0], [91.4, 110.0], [91.5, 110.0], [91.6, 110.0], [91.7, 110.0], [91.8, 110.0], [91.9, 110.0], [92.0, 110.0], [92.1, 110.0], [92.2, 110.0], [92.3, 110.0], [92.4, 110.0], [92.5, 111.0], [92.6, 112.0], [92.7, 112.0], [92.8, 113.0], [92.9, 113.0], [93.0, 113.0], [93.1, 113.0], [93.2, 113.0], [93.3, 113.0], [93.4, 113.0], [93.5, 113.0], [93.6, 113.0], [93.7, 113.0], [93.8, 113.0], [93.9, 113.0], [94.0, 113.0], [94.1, 113.0], [94.2, 113.0], [94.3, 113.0], [94.4, 113.0], [94.5, 113.0], [94.6, 113.0], [94.7, 113.0], [94.8, 114.0], [94.9, 114.0], [95.0, 114.0], [95.1, 114.0], [95.2, 115.0], [95.3, 116.0], [95.4, 116.0], [95.5, 116.0], [95.6, 116.0], [95.7, 116.0], [95.8, 116.0], [95.9, 116.0], [96.0, 116.0], [96.1, 116.0], [96.2, 116.0], [96.3, 117.0], [96.4, 117.0], [96.5, 117.0], [96.6, 117.0], [96.7, 117.0], [96.8, 117.0], [96.9, 117.0], [97.0, 117.0], [97.1, 119.0], [97.2, 119.0], [97.3, 120.0], [97.4, 120.0], [97.5, 120.0], [97.6, 120.0], [97.7, 120.0], [97.8, 120.0], [97.9, 120.0], [98.0, 121.0], [98.1, 123.0], [98.2, 123.0], [98.3, 123.0], [98.4, 123.0], [98.5, 124.0], [98.6, 126.0], [98.7, 126.0], [98.8, 126.0], [98.9, 127.0], [99.0, 129.0], [99.1, 130.0], [99.2, 133.0], [99.3, 136.0], [99.4, 139.0], [99.5, 146.0], [99.6, 150.0], [99.7, 153.0], [99.8, 161.0], [99.9, 170.0], [100.0, 9038.0]], "isOverall": false, "label": "HTTP Request (/)-1", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 0.0], [60.1, 0.0], [60.2, 0.0], [60.3, 0.0], [60.4, 0.0], [60.5, 0.0], [60.6, 0.0], [60.7, 0.0], [60.8, 0.0], [60.9, 0.0], [61.0, 0.0], [61.1, 0.0], [61.2, 0.0], [61.3, 0.0], [61.4, 0.0], [61.5, 0.0], [61.6, 0.0], [61.7, 0.0], [61.8, 0.0], [61.9, 0.0], [62.0, 0.0], [62.1, 0.0], [62.2, 0.0], [62.3, 0.0], [62.4, 0.0], [62.5, 0.0], [62.6, 0.0], [62.7, 0.0], [62.8, 0.0], [62.9, 0.0], [63.0, 0.0], [63.1, 0.0], [63.2, 0.0], [63.3, 0.0], [63.4, 0.0], [63.5, 0.0], [63.6, 0.0], [63.7, 0.0], [63.8, 0.0], [63.9, 0.0], [64.0, 0.0], [64.1, 0.0], [64.2, 0.0], [64.3, 0.0], [64.4, 0.0], [64.5, 0.0], [64.6, 0.0], [64.7, 0.0], [64.8, 0.0], [64.9, 0.0], [65.0, 0.0], [65.1, 0.0], [65.2, 0.0], [65.3, 0.0], [65.4, 0.0], [65.5, 0.0], [65.6, 0.0], [65.7, 0.0], [65.8, 0.0], [65.9, 0.0], [66.0, 0.0], [66.1, 0.0], [66.2, 0.0], [66.3, 0.0], [66.4, 0.0], [66.5, 0.0], [66.6, 0.0], [66.7, 0.0], [66.8, 0.0], [66.9, 0.0], [67.0, 0.0], [67.1, 0.0], [67.2, 0.0], [67.3, 0.0], [67.4, 0.0], [67.5, 0.0], [67.6, 0.0], [67.7, 0.0], [67.8, 0.0], [67.9, 0.0], [68.0, 0.0], [68.1, 0.0], [68.2, 0.0], [68.3, 0.0], [68.4, 0.0], [68.5, 0.0], [68.6, 0.0], [68.7, 0.0], [68.8, 0.0], [68.9, 0.0], [69.0, 0.0], [69.1, 0.0], [69.2, 0.0], [69.3, 0.0], [69.4, 0.0], [69.5, 0.0], [69.6, 0.0], [69.7, 0.0], [69.8, 0.0], [69.9, 0.0], [70.0, 0.0], [70.1, 0.0], [70.2, 0.0], [70.3, 0.0], [70.4, 0.0], [70.5, 0.0], [70.6, 0.0], [70.7, 0.0], [70.8, 0.0], [70.9, 0.0], [71.0, 0.0], [71.1, 0.0], [71.2, 0.0], [71.3, 0.0], [71.4, 0.0], [71.5, 0.0], [71.6, 0.0], [71.7, 0.0], [71.8, 0.0], [71.9, 0.0], [72.0, 0.0], [72.1, 0.0], [72.2, 0.0], [72.3, 0.0], [72.4, 0.0], [72.5, 0.0], [72.6, 0.0], [72.7, 0.0], [72.8, 0.0], [72.9, 0.0], [73.0, 0.0], [73.1, 0.0], [73.2, 0.0], [73.3, 0.0], [73.4, 0.0], [73.5, 0.0], [73.6, 0.0], [73.7, 0.0], [73.8, 0.0], [73.9, 0.0], [74.0, 0.0], [74.1, 0.0], [74.2, 0.0], [74.3, 0.0], [74.4, 0.0], [74.5, 0.0], [74.6, 0.0], [74.7, 0.0], [74.8, 0.0], [74.9, 0.0], [75.0, 0.0], [75.1, 0.0], [75.2, 0.0], [75.3, 0.0], [75.4, 0.0], [75.5, 0.0], [75.6, 0.0], [75.7, 0.0], [75.8, 0.0], [75.9, 0.0], [76.0, 0.0], [76.1, 0.0], [76.2, 0.0], [76.3, 0.0], [76.4, 0.0], [76.5, 0.0], [76.6, 0.0], [76.7, 0.0], [76.8, 0.0], [76.9, 0.0], [77.0, 0.0], [77.1, 0.0], [77.2, 0.0], [77.3, 0.0], [77.4, 0.0], [77.5, 0.0], [77.6, 0.0], [77.7, 0.0], [77.8, 0.0], [77.9, 0.0], [78.0, 0.0], [78.1, 0.0], [78.2, 0.0], [78.3, 0.0], [78.4, 0.0], [78.5, 0.0], [78.6, 0.0], [78.7, 0.0], [78.8, 0.0], [78.9, 0.0], [79.0, 0.0], [79.1, 0.0], [79.2, 0.0], [79.3, 0.0], [79.4, 0.0], [79.5, 0.0], [79.6, 0.0], [79.7, 0.0], [79.8, 0.0], [79.9, 0.0], [80.0, 0.0], [80.1, 0.0], [80.2, 0.0], [80.3, 0.0], [80.4, 0.0], [80.5, 0.0], [80.6, 0.0], [80.7, 0.0], [80.8, 0.0], [80.9, 0.0], [81.0, 0.0], [81.1, 0.0], [81.2, 0.0], [81.3, 0.0], [81.4, 0.0], [81.5, 0.0], [81.6, 0.0], [81.7, 0.0], [81.8, 0.0], [81.9, 0.0], [82.0, 0.0], [82.1, 0.0], [82.2, 0.0], [82.3, 0.0], [82.4, 0.0], [82.5, 0.0], [82.6, 0.0], [82.7, 0.0], [82.8, 0.0], [82.9, 0.0], [83.0, 0.0], [83.1, 0.0], [83.2, 0.0], [83.3, 0.0], [83.4, 0.0], [83.5, 0.0], [83.6, 0.0], [83.7, 0.0], [83.8, 0.0], [83.9, 0.0], [84.0, 0.0], [84.1, 0.0], [84.2, 0.0], [84.3, 0.0], [84.4, 0.0], [84.5, 0.0], [84.6, 0.0], [84.7, 0.0], [84.8, 0.0], [84.9, 0.0], [85.0, 0.0], [85.1, 0.0], [85.2, 0.0], [85.3, 0.0], [85.4, 0.0], [85.5, 0.0], [85.6, 0.0], [85.7, 0.0], [85.8, 0.0], [85.9, 0.0], [86.0, 0.0], [86.1, 0.0], [86.2, 0.0], [86.3, 0.0], [86.4, 0.0], [86.5, 0.0], [86.6, 0.0], [86.7, 0.0], [86.8, 0.0], [86.9, 0.0], [87.0, 0.0], [87.1, 0.0], [87.2, 0.0], [87.3, 0.0], [87.4, 0.0], [87.5, 0.0], [87.6, 0.0], [87.7, 0.0], [87.8, 0.0], [87.9, 0.0], [88.0, 0.0], [88.1, 0.0], [88.2, 0.0], [88.3, 0.0], [88.4, 0.0], [88.5, 0.0], [88.6, 0.0], [88.7, 0.0], [88.8, 0.0], [88.9, 0.0], [89.0, 0.0], [89.1, 0.0], [89.2, 0.0], [89.3, 0.0], [89.4, 0.0], [89.5, 0.0], [89.6, 0.0], [89.7, 0.0], [89.8, 0.0], [89.9, 0.0], [90.0, 0.0], [90.1, 0.0], [90.2, 0.0], [90.3, 0.0], [90.4, 0.0], [90.5, 0.0], [90.6, 0.0], [90.7, 0.0], [90.8, 0.0], [90.9, 0.0], [91.0, 0.0], [91.1, 0.0], [91.2, 0.0], [91.3, 0.0], [91.4, 0.0], [91.5, 0.0], [91.6, 0.0], [91.7, 0.0], [91.8, 0.0], [91.9, 0.0], [92.0, 0.0], [92.1, 0.0], [92.2, 0.0], [92.3, 0.0], [92.4, 0.0], [92.5, 0.0], [92.6, 0.0], [92.7, 0.0], [92.8, 0.0], [92.9, 0.0], [93.0, 0.0], [93.1, 0.0], [93.2, 0.0], [93.3, 0.0], [93.4, 0.0], [93.5, 0.0], [93.6, 0.0], [93.7, 0.0], [93.8, 0.0], [93.9, 0.0], [94.0, 0.0], [94.1, 0.0], [94.2, 0.0], [94.3, 0.0], [94.4, 1.0], [94.5, 1.0], [94.6, 1.0], [94.7, 1.0], [94.8, 1.0], [94.9, 1.0], [95.0, 1.0], [95.1, 1.0], [95.2, 1.0], [95.3, 1.0], [95.4, 1.0], [95.5, 1.0], [95.6, 1.0], [95.7, 1.0], [95.8, 1.0], [95.9, 1.0], [96.0, 1.0], [96.1, 1.0], [96.2, 1.0], [96.3, 1.0], [96.4, 1.0], [96.5, 1.0], [96.6, 1.0], [96.7, 1.0], [96.8, 1.0], [96.9, 1.0], [97.0, 1.0], [97.1, 1.0], [97.2, 1.0], [97.3, 1.0], [97.4, 1.0], [97.5, 1.0], [97.6, 1.0], [97.7, 1.0], [97.8, 1.0], [97.9, 1.0], [98.0, 1.0], [98.1, 1.0], [98.2, 1.0], [98.3, 1.0], [98.4, 1.0], [98.5, 1.0], [98.6, 1.0], [98.7, 1.0], [98.8, 1.0], [98.9, 1.0], [99.0, 1.0], [99.1, 1.0], [99.2, 1.0], [99.3, 1.0], [99.4, 1.0], [99.5, 1.0], [99.6, 1.0], [99.7, 1.0], [99.8, 1.0], [99.9, 2.0]], "isOverall": false, "label": "Debug Sampler", "isController": false}, {"data": [[0.0, 5.0], [0.1, 42.0], [0.2, 43.0], [0.3, 43.0], [0.4, 44.0], [0.5, 44.0], [0.6, 44.0], [0.7, 45.0], [0.8, 45.0], [0.9, 45.0], [1.0, 45.0], [1.1, 45.0], [1.2, 45.0], [1.3, 45.0], [1.4, 45.0], [1.5, 45.0], [1.6, 46.0], [1.7, 46.0], [1.8, 46.0], [1.9, 46.0], [2.0, 46.0], [2.1, 46.0], [2.2, 46.0], [2.3, 46.0], [2.4, 46.0], [2.5, 46.0], [2.6, 46.0], [2.7, 46.0], [2.8, 46.0], [2.9, 46.0], [3.0, 46.0], [3.1, 46.0], [3.2, 46.0], [3.3, 46.0], [3.4, 46.0], [3.5, 46.0], [3.6, 46.0], [3.7, 46.0], [3.8, 46.0], [3.9, 46.0], [4.0, 46.0], [4.1, 46.0], [4.2, 46.0], [4.3, 46.0], [4.4, 46.0], [4.5, 46.0], [4.6, 46.0], [4.7, 46.0], [4.8, 46.0], [4.9, 46.0], [5.0, 46.0], [5.1, 46.0], [5.2, 46.0], [5.3, 46.0], [5.4, 46.0], [5.5, 46.0], [5.6, 46.0], [5.7, 46.0], [5.8, 46.0], [5.9, 46.0], [6.0, 46.0], [6.1, 46.0], [6.2, 46.0], [6.3, 46.0], [6.4, 46.0], [6.5, 46.0], [6.6, 46.0], [6.7, 46.0], [6.8, 46.0], [6.9, 46.0], [7.0, 46.0], [7.1, 46.0], [7.2, 46.0], [7.3, 46.0], [7.4, 46.0], [7.5, 46.0], [7.6, 46.0], [7.7, 46.0], [7.8, 46.0], [7.9, 46.0], [8.0, 46.0], [8.1, 46.0], [8.2, 46.0], [8.3, 46.0], [8.4, 46.0], [8.5, 46.0], [8.6, 46.0], [8.7, 46.0], [8.8, 46.0], [8.9, 46.0], [9.0, 46.0], [9.1, 46.0], [9.2, 46.0], [9.3, 46.0], [9.4, 46.0], [9.5, 46.0], [9.6, 46.0], [9.7, 46.0], [9.8, 46.0], [9.9, 46.0], [10.0, 46.0], [10.1, 46.0], [10.2, 46.0], [10.3, 46.0], [10.4, 46.0], [10.5, 46.0], [10.6, 46.0], [10.7, 46.0], [10.8, 46.0], [10.9, 46.0], [11.0, 46.0], [11.1, 46.0], [11.2, 46.0], [11.3, 46.0], [11.4, 46.0], [11.5, 46.0], [11.6, 46.0], [11.7, 46.0], [11.8, 46.0], [11.9, 46.0], [12.0, 46.0], [12.1, 46.0], [12.2, 46.0], [12.3, 46.0], [12.4, 46.0], [12.5, 46.0], [12.6, 46.0], [12.7, 46.0], [12.8, 46.0], [12.9, 46.0], [13.0, 46.0], [13.1, 46.0], [13.2, 46.0], [13.3, 46.0], [13.4, 46.0], [13.5, 46.0], [13.6, 46.0], [13.7, 46.0], [13.8, 46.0], [13.9, 46.0], [14.0, 46.0], [14.1, 46.0], [14.2, 46.0], [14.3, 46.0], [14.4, 46.0], [14.5, 46.0], [14.6, 46.0], [14.7, 46.0], [14.8, 46.0], [14.9, 46.0], [15.0, 46.0], [15.1, 46.0], [15.2, 46.0], [15.3, 46.0], [15.4, 46.0], [15.5, 46.0], [15.6, 46.0], [15.7, 46.0], [15.8, 46.0], [15.9, 46.0], [16.0, 46.0], [16.1, 46.0], [16.2, 46.0], [16.3, 46.0], [16.4, 46.0], [16.5, 46.0], [16.6, 46.0], [16.7, 46.0], [16.8, 46.0], [16.9, 46.0], [17.0, 46.0], [17.1, 46.0], [17.2, 46.0], [17.3, 46.0], [17.4, 46.0], [17.5, 47.0], [17.6, 47.0], [17.7, 47.0], [17.8, 47.0], [17.9, 47.0], [18.0, 47.0], [18.1, 47.0], [18.2, 47.0], [18.3, 47.0], [18.4, 47.0], [18.5, 47.0], [18.6, 47.0], [18.7, 47.0], [18.8, 47.0], [18.9, 47.0], [19.0, 47.0], [19.1, 47.0], [19.2, 47.0], [19.3, 47.0], [19.4, 47.0], [19.5, 47.0], [19.6, 47.0], [19.7, 47.0], [19.8, 47.0], [19.9, 47.0], [20.0, 47.0], [20.1, 47.0], [20.2, 47.0], [20.3, 47.0], [20.4, 47.0], [20.5, 47.0], [20.6, 47.0], [20.7, 47.0], [20.8, 47.0], [20.9, 47.0], [21.0, 47.0], [21.1, 47.0], [21.2, 48.0], [21.3, 48.0], [21.4, 48.0], [21.5, 48.0], [21.6, 48.0], [21.7, 48.0], [21.8, 48.0], [21.9, 48.0], [22.0, 48.0], [22.1, 48.0], [22.2, 48.0], [22.3, 48.0], [22.4, 48.0], [22.5, 49.0], [22.6, 49.0], [22.7, 49.0], [22.8, 49.0], [22.9, 49.0], [23.0, 49.0], [23.1, 49.0], [23.2, 49.0], [23.3, 49.0], [23.4, 49.0], [23.5, 49.0], [23.6, 49.0], [23.7, 49.0], [23.8, 49.0], [23.9, 49.0], [24.0, 49.0], [24.1, 49.0], [24.2, 49.0], [24.3, 49.0], [24.4, 49.0], [24.5, 49.0], [24.6, 49.0], [24.7, 49.0], [24.8, 49.0], [24.9, 49.0], [25.0, 49.0], [25.1, 49.0], [25.2, 49.0], [25.3, 49.0], [25.4, 49.0], [25.5, 49.0], [25.6, 49.0], [25.7, 49.0], [25.8, 49.0], [25.9, 49.0], [26.0, 49.0], [26.1, 49.0], [26.2, 49.0], [26.3, 49.0], [26.4, 49.0], [26.5, 49.0], [26.6, 49.0], [26.7, 49.0], [26.8, 49.0], [26.9, 49.0], [27.0, 49.0], [27.1, 49.0], [27.2, 49.0], [27.3, 49.0], [27.4, 49.0], [27.5, 49.0], [27.6, 49.0], [27.7, 49.0], [27.8, 49.0], [27.9, 49.0], [28.0, 49.0], [28.1, 49.0], [28.2, 49.0], [28.3, 49.0], [28.4, 49.0], [28.5, 49.0], [28.6, 49.0], [28.7, 49.0], [28.8, 49.0], [28.9, 49.0], [29.0, 49.0], [29.1, 49.0], [29.2, 49.0], [29.3, 49.0], [29.4, 49.0], [29.5, 49.0], [29.6, 49.0], [29.7, 49.0], [29.8, 49.0], [29.9, 49.0], [30.0, 49.0], [30.1, 49.0], [30.2, 49.0], [30.3, 49.0], [30.4, 49.0], [30.5, 49.0], [30.6, 49.0], [30.7, 49.0], [30.8, 49.0], [30.9, 49.0], [31.0, 49.0], [31.1, 49.0], [31.2, 49.0], [31.3, 49.0], [31.4, 49.0], [31.5, 49.0], [31.6, 49.0], [31.7, 49.0], [31.8, 49.0], [31.9, 49.0], [32.0, 49.0], [32.1, 49.0], [32.2, 50.0], [32.3, 50.0], [32.4, 50.0], [32.5, 50.0], [32.6, 50.0], [32.7, 50.0], [32.8, 50.0], [32.9, 50.0], [33.0, 50.0], [33.1, 50.0], [33.2, 50.0], [33.3, 50.0], [33.4, 50.0], [33.5, 50.0], [33.6, 50.0], [33.7, 50.0], [33.8, 50.0], [33.9, 50.0], [34.0, 50.0], [34.1, 50.0], [34.2, 50.0], [34.3, 50.0], [34.4, 50.0], [34.5, 50.0], [34.6, 50.0], [34.7, 50.0], [34.8, 50.0], [34.9, 50.0], [35.0, 50.0], [35.1, 50.0], [35.2, 50.0], [35.3, 50.0], [35.4, 50.0], [35.5, 50.0], [35.6, 50.0], [35.7, 50.0], [35.8, 50.0], [35.9, 50.0], [36.0, 50.0], [36.1, 50.0], [36.2, 50.0], [36.3, 50.0], [36.4, 50.0], [36.5, 50.0], [36.6, 50.0], [36.7, 50.0], [36.8, 50.0], [36.9, 50.0], [37.0, 50.0], [37.1, 50.0], [37.2, 50.0], [37.3, 50.0], [37.4, 50.0], [37.5, 50.0], [37.6, 50.0], [37.7, 50.0], [37.8, 50.0], [37.9, 50.0], [38.0, 50.0], [38.1, 50.0], [38.2, 50.0], [38.3, 50.0], [38.4, 50.0], [38.5, 50.0], [38.6, 50.0], [38.7, 50.0], [38.8, 50.0], [38.9, 50.0], [39.0, 50.0], [39.1, 50.0], [39.2, 50.0], [39.3, 50.0], [39.4, 50.0], [39.5, 50.0], [39.6, 50.0], [39.7, 50.0], [39.8, 50.0], [39.9, 50.0], [40.0, 51.0], [40.1, 51.0], [40.2, 51.0], [40.3, 51.0], [40.4, 51.0], [40.5, 51.0], [40.6, 51.0], [40.7, 52.0], [40.8, 52.0], [40.9, 52.0], [41.0, 52.0], [41.1, 52.0], [41.2, 52.0], [41.3, 52.0], [41.4, 52.0], [41.5, 52.0], [41.6, 52.0], [41.7, 52.0], [41.8, 52.0], [41.9, 52.0], [42.0, 52.0], [42.1, 52.0], [42.2, 52.0], [42.3, 52.0], [42.4, 52.0], [42.5, 52.0], [42.6, 52.0], [42.7, 52.0], [42.8, 52.0], [42.9, 52.0], [43.0, 53.0], [43.1, 53.0], [43.2, 53.0], [43.3, 53.0], [43.4, 53.0], [43.5, 53.0], [43.6, 53.0], [43.7, 53.0], [43.8, 53.0], [43.9, 53.0], [44.0, 53.0], [44.1, 53.0], [44.2, 53.0], [44.3, 53.0], [44.4, 53.0], [44.5, 53.0], [44.6, 53.0], [44.7, 53.0], [44.8, 53.0], [44.9, 53.0], [45.0, 53.0], [45.1, 53.0], [45.2, 53.0], [45.3, 53.0], [45.4, 53.0], [45.5, 53.0], [45.6, 53.0], [45.7, 53.0], [45.8, 53.0], [45.9, 53.0], [46.0, 53.0], [46.1, 53.0], [46.2, 53.0], [46.3, 53.0], [46.4, 53.0], [46.5, 53.0], [46.6, 53.0], [46.7, 53.0], [46.8, 53.0], [46.9, 53.0], [47.0, 53.0], [47.1, 53.0], [47.2, 53.0], [47.3, 53.0], [47.4, 53.0], [47.5, 53.0], [47.6, 53.0], [47.7, 53.0], [47.8, 53.0], [47.9, 53.0], [48.0, 53.0], [48.1, 53.0], [48.2, 53.0], [48.3, 53.0], [48.4, 53.0], [48.5, 53.0], [48.6, 54.0], [48.7, 54.0], [48.8, 54.0], [48.9, 54.0], [49.0, 54.0], [49.1, 55.0], [49.2, 55.0], [49.3, 55.0], [49.4, 55.0], [49.5, 56.0], [49.6, 56.0], [49.7, 56.0], [49.8, 56.0], [49.9, 56.0], [50.0, 56.0], [50.1, 56.0], [50.2, 56.0], [50.3, 56.0], [50.4, 56.0], [50.5, 56.0], [50.6, 56.0], [50.7, 56.0], [50.8, 56.0], [50.9, 56.0], [51.0, 56.0], [51.1, 56.0], [51.2, 56.0], [51.3, 56.0], [51.4, 56.0], [51.5, 56.0], [51.6, 56.0], [51.7, 56.0], [51.8, 56.0], [51.9, 56.0], [52.0, 57.0], [52.1, 57.0], [52.2, 57.0], [52.3, 57.0], [52.4, 57.0], [52.5, 58.0], [52.6, 59.0], [52.7, 59.0], [52.8, 59.0], [52.9, 59.0], [53.0, 59.0], [53.1, 60.0], [53.2, 60.0], [53.3, 60.0], [53.4, 60.0], [53.5, 60.0], [53.6, 61.0], [53.7, 62.0], [53.8, 63.0], [53.9, 63.0], [54.0, 64.0], [54.1, 66.0], [54.2, 67.0], [54.3, 70.0], [54.4, 76.0], [54.5, 93.0], [54.6, 631.0], [54.7, 820.0], [54.8, 863.0], [54.9, 876.0], [55.0, 882.0], [55.1, 890.0], [55.2, 896.0], [55.3, 899.0], [55.4, 900.0], [55.5, 903.0], [55.6, 905.0], [55.7, 906.0], [55.8, 909.0], [55.9, 910.0], [56.0, 913.0], [56.1, 913.0], [56.2, 914.0], [56.3, 916.0], [56.4, 916.0], [56.5, 917.0], [56.6, 919.0], [56.7, 920.0], [56.8, 920.0], [56.9, 922.0], [57.0, 923.0], [57.1, 923.0], [57.2, 923.0], [57.3, 924.0], [57.4, 926.0], [57.5, 926.0], [57.6, 926.0], [57.7, 927.0], [57.8, 929.0], [57.9, 929.0], [58.0, 930.0], [58.1, 930.0], [58.2, 930.0], [58.3, 931.0], [58.4, 932.0], [58.5, 933.0], [58.6, 933.0], [58.7, 933.0], [58.8, 933.0], [58.9, 933.0], [59.0, 935.0], [59.1, 936.0], [59.2, 936.0], [59.3, 936.0], [59.4, 936.0], [59.5, 937.0], [59.6, 937.0], [59.7, 937.0], [59.8, 938.0], [59.9, 939.0], [60.0, 939.0], [60.1, 940.0], [60.2, 940.0], [60.3, 940.0], [60.4, 940.0], [60.5, 940.0], [60.6, 942.0], [60.7, 943.0], [60.8, 943.0], [60.9, 943.0], [61.0, 943.0], [61.1, 943.0], [61.2, 943.0], [61.3, 943.0], [61.4, 943.0], [61.5, 944.0], [61.6, 945.0], [61.7, 946.0], [61.8, 946.0], [61.9, 946.0], [62.0, 946.0], [62.1, 946.0], [62.2, 946.0], [62.3, 946.0], [62.4, 947.0], [62.5, 947.0], [62.6, 947.0], [62.7, 948.0], [62.8, 949.0], [62.9, 949.0], [63.0, 949.0], [63.1, 949.0], [63.2, 950.0], [63.3, 950.0], [63.4, 950.0], [63.5, 950.0], [63.6, 950.0], [63.7, 950.0], [63.8, 950.0], [63.9, 951.0], [64.0, 952.0], [64.1, 953.0], [64.2, 953.0], [64.3, 953.0], [64.4, 953.0], [64.5, 953.0], [64.6, 953.0], [64.7, 953.0], [64.8, 953.0], [64.9, 953.0], [65.0, 954.0], [65.1, 955.0], [65.2, 956.0], [65.3, 956.0], [65.4, 956.0], [65.5, 956.0], [65.6, 956.0], [65.7, 956.0], [65.8, 956.0], [65.9, 957.0], [66.0, 957.0], [66.1, 957.0], [66.2, 957.0], [66.3, 958.0], [66.4, 959.0], [66.5, 959.0], [66.6, 959.0], [66.7, 959.0], [66.8, 959.0], [66.9, 960.0], [67.0, 960.0], [67.1, 960.0], [67.2, 960.0], [67.3, 960.0], [67.4, 960.0], [67.5, 960.0], [67.6, 960.0], [67.7, 961.0], [67.8, 962.0], [67.9, 963.0], [68.0, 963.0], [68.1, 963.0], [68.2, 963.0], [68.3, 963.0], [68.4, 963.0], [68.5, 963.0], [68.6, 963.0], [68.7, 963.0], [68.8, 963.0], [68.9, 963.0], [69.0, 964.0], [69.1, 964.0], [69.2, 965.0], [69.3, 966.0], [69.4, 966.0], [69.5, 966.0], [69.6, 966.0], [69.7, 966.0], [69.8, 966.0], [69.9, 966.0], [70.0, 966.0], [70.1, 967.0], [70.2, 967.0], [70.3, 967.0], [70.4, 967.0], [70.5, 967.0], [70.6, 967.0], [70.7, 968.0], [70.8, 969.0], [70.9, 969.0], [71.0, 969.0], [71.1, 969.0], [71.2, 969.0], [71.3, 970.0], [71.4, 970.0], [71.5, 970.0], [71.6, 970.0], [71.7, 970.0], [71.8, 970.0], [71.9, 970.0], [72.0, 970.0], [72.1, 970.0], [72.2, 971.0], [72.3, 972.0], [72.4, 972.0], [72.5, 973.0], [72.6, 973.0], [72.7, 973.0], [72.8, 973.0], [72.9, 973.0], [73.0, 973.0], [73.1, 973.0], [73.2, 973.0], [73.3, 973.0], [73.4, 973.0], [73.5, 973.0], [73.6, 973.0], [73.7, 974.0], [73.8, 974.0], [73.9, 975.0], [74.0, 976.0], [74.1, 976.0], [74.2, 976.0], [74.3, 976.0], [74.4, 976.0], [74.5, 976.0], [74.6, 976.0], [74.7, 976.0], [74.8, 976.0], [74.9, 977.0], [75.0, 977.0], [75.1, 977.0], [75.2, 977.0], [75.3, 977.0], [75.4, 978.0], [75.5, 979.0], [75.6, 979.0], [75.7, 979.0], [75.8, 979.0], [75.9, 979.0], [76.0, 980.0], [76.1, 980.0], [76.2, 980.0], [76.3, 980.0], [76.4, 980.0], [76.5, 980.0], [76.6, 980.0], [76.7, 980.0], [76.8, 980.0], [76.9, 981.0], [77.0, 981.0], [77.1, 982.0], [77.2, 982.0], [77.3, 983.0], [77.4, 983.0], [77.5, 983.0], [77.6, 983.0], [77.7, 983.0], [77.8, 983.0], [77.9, 983.0], [78.0, 983.0], [78.1, 983.0], [78.2, 983.0], [78.3, 984.0], [78.4, 984.0], [78.5, 985.0], [78.6, 986.0], [78.7, 986.0], [78.8, 986.0], [78.9, 986.0], [79.0, 986.0], [79.1, 986.0], [79.2, 986.0], [79.3, 986.0], [79.4, 987.0], [79.5, 987.0], [79.6, 987.0], [79.7, 987.0], [79.8, 987.0], [79.9, 988.0], [80.0, 989.0], [80.1, 989.0], [80.2, 989.0], [80.3, 989.0], [80.4, 989.0], [80.5, 989.0], [80.6, 990.0], [80.7, 990.0], [80.8, 990.0], [80.9, 990.0], [81.0, 990.0], [81.1, 990.0], [81.2, 990.0], [81.3, 990.0], [81.4, 990.0], [81.5, 991.0], [81.6, 992.0], [81.7, 992.0], [81.8, 993.0], [81.9, 993.0], [82.0, 993.0], [82.1, 993.0], [82.2, 993.0], [82.3, 993.0], [82.4, 993.0], [82.5, 993.0], [82.6, 993.0], [82.7, 994.0], [82.8, 994.0], [82.9, 995.0], [83.0, 996.0], [83.1, 996.0], [83.2, 996.0], [83.3, 996.0], [83.4, 996.0], [83.5, 996.0], [83.6, 996.0], [83.7, 996.0], [83.8, 997.0], [83.9, 997.0], [84.0, 997.0], [84.1, 997.0], [84.2, 998.0], [84.3, 999.0], [84.4, 999.0], [84.5, 999.0], [84.6, 1000.0], [84.7, 1000.0], [84.8, 1000.0], [84.9, 1000.0], [85.0, 1000.0], [85.1, 1000.0], [85.2, 1000.0], [85.3, 1000.0], [85.4, 1001.0], [85.5, 1002.0], [85.6, 1002.0], [85.7, 1003.0], [85.8, 1003.0], [85.9, 1003.0], [86.0, 1003.0], [86.1, 1003.0], [86.2, 1003.0], [86.3, 1003.0], [86.4, 1003.0], [86.5, 1004.0], [86.6, 1004.0], [86.7, 1005.0], [86.8, 1006.0], [86.9, 1006.0], [87.0, 1006.0], [87.1, 1006.0], [87.2, 1006.0], [87.3, 1006.0], [87.4, 1007.0], [87.5, 1007.0], [87.6, 1007.0], [87.7, 1007.0], [87.8, 1009.0], [87.9, 1009.0], [88.0, 1009.0], [88.1, 1009.0], [88.2, 1010.0], [88.3, 1010.0], [88.4, 1010.0], [88.5, 1010.0], [88.6, 1010.0], [88.7, 1010.0], [88.8, 1010.0], [88.9, 1011.0], [89.0, 1012.0], [89.1, 1013.0], [89.2, 1013.0], [89.3, 1013.0], [89.4, 1013.0], [89.5, 1013.0], [89.6, 1013.0], [89.7, 1013.0], [89.8, 1013.0], [89.9, 1014.0], [90.0, 1015.0], [90.1, 1016.0], [90.2, 1016.0], [90.3, 1016.0], [90.4, 1016.0], [90.5, 1016.0], [90.6, 1016.0], [90.7, 1017.0], [90.8, 1017.0], [90.9, 1017.0], [91.0, 1019.0], [91.1, 1019.0], [91.2, 1019.0], [91.3, 1020.0], [91.4, 1020.0], [91.5, 1020.0], [91.6, 1020.0], [91.7, 1020.0], [91.8, 1021.0], [91.9, 1022.0], [92.0, 1023.0], [92.1, 1023.0], [92.2, 1023.0], [92.3, 1023.0], [92.4, 1023.0], [92.5, 1024.0], [92.6, 1025.0], [92.7, 1026.0], [92.8, 1026.0], [92.9, 1026.0], [93.0, 1026.0], [93.1, 1026.0], [93.2, 1027.0], [93.3, 1027.0], [93.4, 1028.0], [93.5, 1029.0], [93.6, 1029.0], [93.7, 1029.0], [93.8, 1030.0], [93.9, 1030.0], [94.0, 1030.0], [94.1, 1030.0], [94.2, 1032.0], [94.3, 1033.0], [94.4, 1033.0], [94.5, 1033.0], [94.6, 1033.0], [94.7, 1033.0], [94.8, 1034.0], [94.9, 1036.0], [95.0, 1036.0], [95.1, 1036.0], [95.2, 1036.0], [95.3, 1037.0], [95.4, 1037.0], [95.5, 1039.0], [95.6, 1039.0], [95.7, 1040.0], [95.8, 1040.0], [95.9, 1040.0], [96.0, 1043.0], [96.1, 1043.0], [96.2, 1043.0], [96.3, 1044.0], [96.4, 1045.0], [96.5, 1046.0], [96.6, 1047.0], [96.7, 1048.0], [96.8, 1049.0], [96.9, 1050.0], [97.0, 1050.0], [97.1, 1053.0], [97.2, 1053.0], [97.3, 1053.0], [97.4, 1054.0], [97.5, 1056.0], [97.6, 1056.0], [97.7, 1057.0], [97.8, 1059.0], [97.9, 1060.0], [98.0, 1062.0], [98.1, 1063.0], [98.2, 1065.0], [98.3, 1066.0], [98.4, 1069.0], [98.5, 1070.0], [98.6, 1072.0], [98.7, 1075.0], [98.8, 1077.0], [98.9, 1079.0], [99.0, 1083.0], [99.1, 1087.0], [99.2, 1090.0], [99.3, 1095.0], [99.4, 1103.0], [99.5, 1109.0], [99.6, 1117.0], [99.7, 1136.0], [99.8, 1153.0], [99.9, 1179.0], [100.0, 9914.0]], "isOverall": false, "label": "HTTP Request (/)", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 11995.0, "series": [{"data": [[9200.0, 1.0], [9100.0, 1.0], [9000.0, 1.0], [600.0, 8.0], [9500.0, 2.0], [9600.0, 1.0], [9400.0, 1.0], [9300.0, 1.0], [700.0, 111.0], [800.0, 6026.0], [900.0, 3701.0], [1000.0, 120.0], [1100.0, 7.0], [1200.0, 1.0], [400.0, 9.0], [500.0, 9.0]], "isOverall": false, "label": "HTTP Request (/)-0", "isController": false}, {"data": [[0.0, 6841.0], [100.0, 3159.0]], "isOverall": false, "label": "HTTP Request (/list)", "isController": false}, {"data": [[0.0, 6771.0], [9000.0, 1.0], [100.0, 3228.0]], "isOverall": false, "label": "HTTP Request (/)-1", "isController": false}, {"data": [[0.0, 10000.0]], "isOverall": false, "label": "Debug Sampler", "isController": false}, {"data": [[0.0, 11995.0], [8900.0, 1.0], [9200.0, 1.0], [9100.0, 1.0], [600.0, 7.0], [9300.0, 1.0], [9600.0, 2.0], [9700.0, 2.0], [9400.0, 1.0], [9900.0, 1.0], [700.0, 10.0], [800.0, 139.0], [900.0, 6440.0], [1000.0, 3258.0], [1100.0, 119.0], [1200.0, 6.0], [1300.0, 1.0], [100.0, 4.0], [500.0, 11.0]], "isOverall": false, "label": "HTTP Request (/)", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 19.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 42007.0, "series": [{"data": [[0.0, 42007.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 19974.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 19.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.9689119170984448, "minX": 1.7325423E12, "maxY": 10.0, "series": [{"data": [[1.7325423E12, 1.9689119170984448], [1.73254236E12, 1.9961261759822913]], "isOverall": false, "label": "Thread Group (2x1000)", "isController": false}, {"data": [[1.73254272E12, 10.0], [1.73254338E12, 10.0], [1.73254242E12, 10.0], [1.73254308E12, 10.0], [1.73254278E12, 10.0], [1.73254248E12, 10.0], [1.73254314E12, 10.0], [1.73254344E12, 9.764927934111185], [1.73254284E12, 10.0], [1.73254254E12, 10.0], [1.7325432E12, 10.0], [1.7325429E12, 10.0], [1.7325426E12, 10.0], [1.73254326E12, 10.0], [1.7325423E12, 7.005747126436783], [1.73254296E12, 10.0], [1.73254266E12, 10.0], [1.73254236E12, 10.0], [1.73254302E12, 10.0], [1.73254332E12, 10.0]], "isOverall": false, "label": "Thread Group (10x1000-5)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73254344E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 899.2825552825549, "series": [{"data": [[4.0, 537.5], [8.0, 756.0000000000001], [2.0, 482.25], [9.0, 830.0909090909091], [5.0, 636.0], [10.0, 897.5118448637327], [11.0, 806.9999999999999], [6.0, 658.5], [12.0, 899.2825552825549], [3.0, 511.0], [7.0, 582.75]], "isOverall": false, "label": "HTTP Request (/)-0", "isController": false}, {"data": [[10.06599999999995, 896.5168999999989]], "isOverall": false, "label": "HTTP Request (/)-0-Aggregated", "isController": false}, {"data": [[4.0, 77.8], [8.0, 85.4], [2.0, 75.66666666666667], [1.0, 80.0], [9.0, 87.75], [5.0, 79.33333333333333], [10.0, 94.65167714884682], [11.0, 100.33333333333334], [6.0, 77.4], [12.0, 103.18137254901966], [3.0, 74.0], [7.0, 74.75]], "isOverall": false, "label": "HTTP Request (/list)", "isController": false}, {"data": [[10.065899999999985, 94.94259999999989]], "isOverall": false, "label": "HTTP Request (/list)-Aggregated", "isController": false}, {"data": [[4.0, 75.25], [8.0, 81.63636363636364], [2.0, 73.25], [9.0, 84.81818181818181], [5.0, 80.66666666666667], [10.0, 94.98909853249486], [11.0, 99.0], [6.0, 78.83333333333333], [12.0, 103.49631449631453], [3.0, 73.33333333333333], [7.0, 75.25]], "isOverall": false, "label": "HTTP Request (/)-1", "isController": false}, {"data": [[10.06599999999995, 95.26730000000006]], "isOverall": false, "label": "HTTP Request (/)-1-Aggregated", "isController": false}, {"data": [[4.0, 1.4], [8.0, 0.0], [2.0, 0.0], [1.0, 0.0], [9.0, 0.16666666666666669], [5.0, 0.33333333333333337], [10.0, 0.053039832285115406], [11.0, 0.16666666666666669], [6.0, 0.2], [12.0, 0.18137254901960792], [3.0, 0.0], [7.0, 0.25]], "isOverall": false, "label": "Debug Sampler", "isController": false}, {"data": [[10.065899999999985, 0.05930000000000002]], "isOverall": false, "label": "Debug Sampler-Aggregated", "isController": false}, {"data": [[2.0, 208.3846153846154], [4.0, 122.10344827586206], [8.0, 244.63636363636363], [9.0, 280.5365853658537], [5.0, 117.99999999999999], [10.0, 520.941672338869], [11.0, 198.69999999999996], [6.0, 185.06666666666663], [12.0, 197.88081725312088], [3.0, 369.8], [7.0, 133.17857142857144]], "isOverall": false, "label": "HTTP Request (/)", "isController": false}, {"data": [[10.20636363636364, 478.334636363637]], "isOverall": false, "label": "HTTP Request (/)-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 12.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1077.8666666666666, "minX": 1.7325423E12, "maxY": 146003.38333333333, "series": [{"data": [[1.73254272E12, 101304.61666666667], [1.73254338E12, 97418.53333333334], [1.73254242E12, 99704.93333333333], [1.73254308E12, 87135.73333333334], [1.73254278E12, 101156.4], [1.73254248E12, 100618.35], [1.73254314E12, 101202.65], [1.73254344E12, 91715.7], [1.73254284E12, 101077.7], [1.73254254E12, 101121.6], [1.7325432E12, 99208.38333333333], [1.7325429E12, 101031.41666666667], [1.7325426E12, 101570.23333333334], [1.73254326E12, 98435.03333333334], [1.7325423E12, 10474.716666666667], [1.73254296E12, 101321.06666666667], [1.73254266E12, 100907.23333333334], [1.73254236E12, 146003.38333333333], [1.73254302E12, 101113.55], [1.73254332E12, 97877.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73254272E12, 13395.866666666667], [1.73254338E12, 12861.166666666666], [1.73254242E12, 13178.933333333332], [1.73254308E12, 11507.833333333334], [1.73254278E12, 13352.066666666668], [1.73254248E12, 13291.133333333333], [1.73254314E12, 13366.2], [1.73254344E12, 12127.066666666668], [1.73254284E12, 13350.966666666667], [1.73254254E12, 13348.466666666667], [1.7325432E12, 13109.4], [1.7325429E12, 13336.833333333334], [1.7325426E12, 13409.966666666667], [1.73254326E12, 13001.9], [1.7325423E12, 1077.8666666666666], [1.73254296E12, 13391.7], [1.73254266E12, 13333.8], [1.73254236E12, 16475.766666666666], [1.73254302E12, 13354.3], [1.73254332E12, 12928.766666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73254344E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.009671179883945847, "minX": 1.7325423E12, "maxY": 999.7425373134315, "series": [{"data": [[1.73254272E12, 878.3914656771801], [1.73254338E12, 921.1728155339808], [1.73254242E12, 890.9867924528298], [1.73254308E12, 881.8831168831175], [1.73254278E12, 882.9475655430708], [1.73254248E12, 886.5714285714289], [1.73254314E12, 999.7425373134315], [1.73254344E12, 910.8665297741269], [1.73254284E12, 881.4813432835819], [1.73254254E12, 880.4803738317761], [1.7325432E12, 899.3555133079852], [1.7325429E12, 881.9719101123594], [1.7325426E12, 877.8901303538178], [1.73254326E12, 909.8448275862072], [1.7325423E12, 684.1379310344827], [1.73254296E12, 879.8085501858737], [1.73254266E12, 884.0018691588785], [1.73254236E12, 898.3019230769235], [1.73254302E12, 882.7999999999998], [1.73254332E12, 918.1293436293437]], "isOverall": false, "label": "HTTP Request (/)-0", "isController": false}, {"data": [[1.73254272E12, 94.48880597014927], [1.73254338E12, 96.24564796905223], [1.73254242E12, 95.42234848484856], [1.73254308E12, 93.52164502164509], [1.73254278E12, 94.03358208955231], [1.73254248E12, 94.08834586466156], [1.73254314E12, 95.00186567164175], [1.73254344E12, 94.87063655030798], [1.73254284E12, 93.50373134328349], [1.73254254E12, 94.42085661080061], [1.7325432E12, 94.79619047619042], [1.7325429E12, 94.7742537313432], [1.7325426E12, 94.10780669144987], [1.73254326E12, 96.0057471264368], [1.7325423E12, 91.92592592592594], [1.73254296E12, 93.1492537313433], [1.73254266E12, 94.34456928838945], [1.73254236E12, 101.72360844529742], [1.73254302E12, 94.60634328358209], [1.73254332E12, 95.01930501930501]], "isOverall": false, "label": "HTTP Request (/list)", "isController": false}, {"data": [[1.73254272E12, 91.78026070763501], [1.73254338E12, 95.1434108527132], [1.73254242E12, 95.79166666666667], [1.73254308E12, 92.29284164859001], [1.73254278E12, 93.62686567164178], [1.73254248E12, 94.20037453183517], [1.73254314E12, 111.74253731343286], [1.73254344E12, 93.88911704312117], [1.73254284E12, 93.43364485981311], [1.73254254E12, 94.77943925233649], [1.7325432E12, 94.23764258555136], [1.7325429E12, 93.82056074766355], [1.7325426E12, 93.99814126394058], [1.73254326E12, 94.57773512476012], [1.7325423E12, 89.37037037037037], [1.73254296E12, 93.53072625698326], [1.73254266E12, 94.08037383177573], [1.73254236E12, 100.98272552783111], [1.73254302E12, 93.48507462686567], [1.73254332E12, 94.54335260115614]], "isOverall": false, "label": "HTTP Request (/)-1", "isController": false}, {"data": [[1.73254272E12, 0.06529850746268662], [1.73254338E12, 0.009671179883945847], [1.73254242E12, 0.03409090909090906], [1.73254308E12, 0.012987012987013], [1.73254278E12, 0.0447761194029851], [1.73254248E12, 0.21992481203007527], [1.73254314E12, 0.02238805970149253], [1.73254344E12, 0.014373716632443533], [1.73254284E12, 0.05037313432835817], [1.73254254E12, 0.1527001862197393], [1.7325432E12, 0.017142857142857147], [1.7325429E12, 0.03544776119402986], [1.7325426E12, 0.07992565055762083], [1.73254326E12, 0.019157088122605363], [1.7325423E12, 0.5555555555555555], [1.73254296E12, 0.033582089552238785], [1.73254266E12, 0.08988764044943817], [1.73254236E12, 0.14779270633397304], [1.73254302E12, 0.022388059701492546], [1.73254332E12, 0.017374517374517368]], "isOverall": false, "label": "Debug Sampler", "isController": false}, {"data": [[1.73254272E12, 510.19105312208814], [1.73254338E12, 533.3152279340447], [1.73254242E12, 517.5950804162732], [1.73254308E12, 510.71645021645054], [1.73254278E12, 513.0223880597017], [1.73254248E12, 515.8039399624764], [1.73254314E12, 588.383970177073], [1.73254344E12, 530.928571428572], [1.73254284E12, 511.8001867413633], [1.73254254E12, 512.0224089635855], [1.7325432E12, 521.8639391056134], [1.7325429E12, 512.6841121495321], [1.7325426E12, 510.13277623026926], [1.73254326E12, 526.4534995206133], [1.7325423E12, 123.0428015564202], [1.73254296E12, 511.44413407821145], [1.73254266E12, 514.0916744621144], [1.73254236E12, 224.61551966292114], [1.73254302E12, 513.7177570093452], [1.73254332E12, 531.4657666345227]], "isOverall": false, "label": "HTTP Request (/)", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73254344E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7325423E12, "maxY": 999.7369402985075, "series": [{"data": [[1.73254272E12, 878.3710575139135], [1.73254338E12, 921.1708737864084], [1.73254242E12, 890.9867924528298], [1.73254308E12, 881.8744588744593], [1.73254278E12, 882.932584269663], [1.73254248E12, 886.567669172932], [1.73254314E12, 999.7369402985075], [1.73254344E12, 910.8665297741269], [1.73254284E12, 881.4645522388058], [1.73254254E12, 880.4691588785048], [1.7325432E12, 899.3555133079852], [1.7325429E12, 881.9588014981276], [1.7325426E12, 877.8808193668531], [1.73254326E12, 909.8409961685823], [1.7325423E12, 684.103448275862], [1.73254296E12, 879.8011152416353], [1.73254266E12, 883.9869158878503], [1.73254236E12, 898.3], [1.73254302E12, 882.7887850467281], [1.73254332E12, 918.127413127413]], "isOverall": false, "label": "HTTP Request (/)-0", "isController": false}, {"data": [[1.73254272E12, 94.43283582089549], [1.73254338E12, 96.2398452611218], [1.73254242E12, 95.41856060606068], [1.73254308E12, 93.51731601731602], [1.73254278E12, 93.9981343283581], [1.73254248E12, 94.07142857142865], [1.73254314E12, 94.9850746268657], [1.73254344E12, 94.86858316221766], [1.73254284E12, 93.46268656716407], [1.73254254E12, 94.36685288640595], [1.7325432E12, 94.79047619047614], [1.7325429E12, 94.74067164179098], [1.7325426E12, 94.0334572490707], [1.73254326E12, 96.00000000000007], [1.7325423E12, 91.81481481481482], [1.73254296E12, 93.12313432835822], [1.73254266E12, 94.27715355805242], [1.73254236E12, 101.71017274472173], [1.73254302E12, 94.58768656716411], [1.73254332E12, 95.00965250965244]], "isOverall": false, "label": "HTTP Request (/list)", "isController": false}, {"data": [[1.73254272E12, 91.7337057728119], [1.73254338E12, 95.13953488372093], [1.73254242E12, 95.78598484848483], [1.73254308E12, 92.28199566160517], [1.73254278E12, 93.56902985074625], [1.73254248E12, 94.187265917603], [1.73254314E12, 111.72761194029856], [1.73254344E12, 93.88501026694048], [1.73254284E12, 93.39065420560746], [1.73254254E12, 94.74018691588795], [1.7325432E12, 94.22813688212918], [1.7325429E12, 93.79252336448596], [1.7325426E12, 93.90334572490708], [1.73254326E12, 94.57581573896353], [1.7325423E12, 89.29629629629629], [1.73254296E12, 93.51396648044688], [1.73254266E12, 94.01682242990655], [1.73254236E12, 100.96928982725534], [1.73254302E12, 93.47388059701497], [1.73254332E12, 94.53564547206152]], "isOverall": false, "label": "HTTP Request (/)-1", "isController": false}, {"data": [[1.73254272E12, 0.0], [1.73254338E12, 0.0], [1.73254242E12, 0.0], [1.73254308E12, 0.0], [1.73254278E12, 0.0], [1.73254248E12, 0.0], [1.73254314E12, 0.0], [1.73254344E12, 0.0], [1.73254284E12, 0.0], [1.73254254E12, 0.0], [1.7325432E12, 0.0], [1.7325429E12, 0.0], [1.7325426E12, 0.0], [1.73254326E12, 0.0], [1.7325423E12, 0.0], [1.73254296E12, 0.0], [1.73254266E12, 0.0], [1.73254236E12, 0.0], [1.73254302E12, 0.0], [1.73254332E12, 0.0]], "isOverall": false, "label": "Debug Sampler", "isController": false}, {"data": [[1.73254272E12, 464.1472506989751], [1.73254338E12, 485.5460717749758], [1.73254242E12, 469.6811731315043], [1.73254308E12, 464.5097402597404], [1.73254278E12, 466.09048507462757], [1.73254248E12, 468.57973733583515], [1.73254314E12, 532.4277726001858], [1.73254344E12, 483.4399585921319], [1.73254284E12, 464.98599439775916], [1.73254254E12, 464.6143790849669], [1.7325432E12, 474.55470980019055], [1.7325429E12, 465.6224299065419], [1.7325426E12, 463.1049210770661], [1.73254326E12, 479.0498561840843], [1.7325423E12, 113.36964980544755], [1.73254296E12, 464.51675977653593], [1.73254266E12, 466.9204864359217], [1.73254236E12, 206.04389044943815], [1.73254302E12, 466.7271028037386], [1.73254332E12, 483.9826422372228]], "isOverall": false, "label": "HTTP Request (/)", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73254344E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7325423E12, "maxY": 0.38910505836575826, "series": [{"data": [[1.73254272E12, 0.0], [1.73254338E12, 0.0], [1.73254242E12, 0.0], [1.73254308E12, 0.0], [1.73254278E12, 0.0], [1.73254248E12, 0.0], [1.73254314E12, 0.0], [1.73254344E12, 0.0], [1.73254284E12, 0.0], [1.73254254E12, 0.0], [1.7325432E12, 0.0], [1.7325429E12, 0.0], [1.7325426E12, 0.0], [1.73254326E12, 0.0], [1.7325423E12, 0.0], [1.73254296E12, 0.0], [1.73254266E12, 0.0], [1.73254236E12, 0.003846153846153846], [1.73254302E12, 0.0], [1.73254332E12, 0.005791505791505797]], "isOverall": false, "label": "HTTP Request (/)-0", "isController": false}, {"data": [[1.73254272E12, 0.005597014925373135], [1.73254338E12, 0.0], [1.73254242E12, 0.0018939393939393938], [1.73254308E12, 0.0], [1.73254278E12, 0.0], [1.73254248E12, 0.0], [1.73254314E12, 0.0], [1.73254344E12, 0.0], [1.73254284E12, 0.0], [1.73254254E12, 0.0], [1.7325432E12, 0.0019047619047619054], [1.7325429E12, 0.0], [1.7325426E12, 0.0], [1.73254326E12, 0.0], [1.7325423E12, 0.0], [1.73254296E12, 0.0], [1.73254266E12, 0.0], [1.73254236E12, 0.0], [1.73254302E12, 0.0], [1.73254332E12, 0.0019305019305019312]], "isOverall": false, "label": "HTTP Request (/list)", "isController": false}, {"data": [[1.73254272E12, 0.016759776536312842], [1.73254338E12, 0.0077519379844961265], [1.73254242E12, 0.02462121212121212], [1.73254308E12, 0.023861171366594363], [1.73254278E12, 0.013059701492537315], [1.73254248E12, 0.009363295880149813], [1.73254314E12, 0.016791044776119406], [1.73254344E12, 0.016427104722792615], [1.73254284E12, 0.00560747663551402], [1.73254254E12, 0.007476635514018695], [1.7325432E12, 0.011406844106463889], [1.7325429E12, 0.013084112149532708], [1.7325426E12, 0.018587360594795547], [1.73254326E12, 0.017274472168905954], [1.7325423E12, 0.0], [1.73254296E12, 0.0260707635009311], [1.73254266E12, 0.014953271028037387], [1.73254236E12, 0.013435700575815737], [1.73254302E12, 0.00932835820895522], [1.73254332E12, 0.005780346820809248]], "isOverall": false, "label": "HTTP Request (/)-1", "isController": false}, {"data": [[1.73254272E12, 0.0], [1.73254338E12, 0.0], [1.73254242E12, 0.0], [1.73254308E12, 0.0], [1.73254278E12, 0.0], [1.73254248E12, 0.0], [1.73254314E12, 0.0], [1.73254344E12, 0.0], [1.73254284E12, 0.0], [1.73254254E12, 0.0], [1.7325432E12, 0.0], [1.7325429E12, 0.0], [1.7325426E12, 0.0], [1.73254326E12, 0.0], [1.7325423E12, 0.0], [1.73254296E12, 0.0], [1.73254266E12, 0.0], [1.73254236E12, 0.0], [1.73254302E12, 0.0], [1.73254332E12, 0.0]], "isOverall": false, "label": "Debug Sampler", "isController": false}, {"data": [[1.73254272E12, 0.0], [1.73254338E12, 0.0], [1.73254242E12, 0.001892147587511826], [1.73254308E12, 0.0], [1.73254278E12, 0.0], [1.73254248E12, 0.0018761726078799252], [1.73254314E12, 0.0], [1.73254344E12, 0.0], [1.73254284E12, 0.0], [1.73254254E12, 0.0], [1.7325432E12, 0.0], [1.7325429E12, 0.0], [1.7325426E12, 0.0], [1.73254326E12, 0.0], [1.7325423E12, 0.38910505836575826], [1.73254296E12, 0.0], [1.73254266E12, 0.0018709073900841909], [1.73254236E12, 0.0010533707865168541], [1.73254302E12, 9.345794392523365E-4], [1.73254332E12, 0.004821600771456127]], "isOverall": false, "label": "HTTP Request (/)", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73254344E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7325423E12, "maxY": 9914.0, "series": [{"data": [[1.73254272E12, 1093.0], [1.73254338E12, 1313.0], [1.73254242E12, 1230.0], [1.73254308E12, 1150.0], [1.73254278E12, 1173.0], [1.73254248E12, 1153.0], [1.73254314E12, 9914.0], [1.73254344E12, 1197.0], [1.73254284E12, 1139.0], [1.73254254E12, 1159.0], [1.7325432E12, 1123.0], [1.7325429E12, 1186.0], [1.7325426E12, 1070.0], [1.73254326E12, 1296.0], [1.7325423E12, 992.0], [1.73254296E12, 1106.0], [1.73254266E12, 1240.0], [1.73254236E12, 1181.0], [1.73254302E12, 1170.0], [1.73254332E12, 1130.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73254272E12, 0.0], [1.73254338E12, 0.0], [1.73254242E12, 0.0], [1.73254308E12, 0.0], [1.73254278E12, 0.0], [1.73254248E12, 0.0], [1.73254314E12, 0.0], [1.73254344E12, 0.0], [1.73254284E12, 0.0], [1.73254254E12, 0.0], [1.7325432E12, 0.0], [1.7325429E12, 0.0], [1.7325426E12, 0.0], [1.73254326E12, 0.0], [1.7325423E12, 0.0], [1.73254296E12, 0.0], [1.73254266E12, 0.0], [1.73254236E12, 0.0], [1.73254302E12, 0.0], [1.73254332E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73254272E12, 962.8000000000002], [1.73254338E12, 1007.0], [1.73254242E12, 973.8000000000002], [1.73254308E12, 969.0], [1.73254278E12, 966.5], [1.73254248E12, 973.0], [1.73254314E12, 966.0], [1.73254344E12, 1009.0], [1.73254284E12, 966.0], [1.73254254E12, 964.0], [1.7325432E12, 983.0], [1.7325429E12, 968.8000000000002], [1.7325426E12, 963.0], [1.73254326E12, 996.0], [1.7325423E12, 656.9999999999999], [1.73254296E12, 961.8000000000002], [1.73254266E12, 967.0], [1.73254236E12, 955.0], [1.73254302E12, 966.0], [1.73254332E12, 1003.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73254272E12, 1028.7799999999997], [1.73254338E12, 1083.0], [1.73254242E12, 1077.5599999999995], [1.73254308E12, 1033.2800000000002], [1.73254278E12, 1038.6999999999998], [1.73254248E12, 1053.0599999999995], [1.73254314E12, 1068.6400000000003], [1.73254344E12, 1072.85], [1.73254284E12, 1036.0], [1.73254254E12, 1042.8400000000001], [1.7325432E12, 1057.0], [1.7325429E12, 1030.88], [1.7325426E12, 1027.0], [1.73254326E12, 1068.0700000000002], [1.7325423E12, 925.1599999999999], [1.73254296E12, 1030.0], [1.73254266E12, 1054.0], [1.73254236E12, 1061.6800000000003], [1.73254302E12, 1052.3000000000006], [1.73254332E12, 1073.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73254272E12, 93.0], [1.73254338E12, 94.0], [1.73254242E12, 94.0], [1.73254308E12, 93.0], [1.73254278E12, 93.0], [1.73254248E12, 93.0], [1.73254314E12, 93.0], [1.73254344E12, 93.0], [1.73254284E12, 93.0], [1.73254254E12, 93.0], [1.7325432E12, 93.0], [1.7325429E12, 93.0], [1.7325426E12, 93.0], [1.73254326E12, 93.0], [1.7325423E12, 50.0], [1.73254296E12, 93.0], [1.73254266E12, 93.0], [1.73254236E12, 56.0], [1.73254302E12, 93.0], [1.73254332E12, 93.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.73254272E12, 984.0], [1.73254338E12, 1033.0], [1.73254242E12, 1007.0], [1.73254308E12, 989.0], [1.73254278E12, 993.0], [1.73254248E12, 993.2999999999993], [1.73254314E12, 993.0], [1.73254344E12, 1030.0], [1.73254284E12, 993.0], [1.73254254E12, 990.0], [1.7325432E12, 1012.2999999999997], [1.7325429E12, 993.0], [1.7325426E12, 989.0], [1.73254326E12, 1020.0], [1.7325423E12, 807.3999999999999], [1.73254296E12, 993.0], [1.73254266E12, 996.0], [1.73254236E12, 1003.0], [1.73254302E12, 993.0], [1.73254332E12, 1032.4499999999998]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73254344E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 49.0, "minX": 12.0, "maxY": 111.5, "series": [{"data": [[35.0, 92.0], [38.0, 111.5], [41.0, 98.5], [42.0, 106.0], [43.0, 96.0], [45.0, 96.0], [47.0, 93.5], [46.0, 97.0], [49.0, 93.0], [48.0, 97.0], [50.0, 93.0], [51.0, 93.0], [52.0, 93.0], [53.0, 93.0], [55.0, 93.0], [54.0, 93.0], [57.0, 93.0], [56.0, 93.0], [59.0, 93.0], [58.0, 93.0], [60.0, 93.0], [67.0, 49.0], [77.0, 49.0], [83.0, 52.0], [86.0, 53.0], [85.0, 53.0], [87.0, 56.0], [90.0, 55.0], [88.0, 54.0], [91.0, 55.0], [89.0, 54.0], [92.0, 54.0], [94.0, 53.0], [93.0, 53.0], [95.0, 53.0], [96.0, 56.0], [12.0, 80.0], [29.0, 76.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 96.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 49.0, "minX": 12.0, "maxY": 111.5, "series": [{"data": [[35.0, 92.0], [38.0, 111.5], [41.0, 98.5], [42.0, 106.0], [43.0, 96.0], [45.0, 96.0], [47.0, 93.5], [46.0, 96.5], [49.0, 93.0], [48.0, 97.0], [50.0, 93.0], [51.0, 93.0], [52.0, 93.0], [53.0, 93.0], [55.0, 93.0], [54.0, 93.0], [57.0, 92.0], [56.0, 93.0], [59.0, 93.0], [58.0, 93.0], [60.0, 93.0], [67.0, 49.0], [77.0, 49.0], [83.0, 52.0], [86.0, 53.0], [85.0, 53.0], [87.0, 56.0], [90.0, 55.0], [88.0, 54.0], [91.0, 55.0], [89.0, 54.0], [92.0, 54.0], [94.0, 53.0], [93.0, 53.0], [95.0, 53.0], [96.0, 56.0], [12.0, 80.0], [29.0, 76.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 96.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.483333333333333, "minX": 1.7325423E12, "maxY": 82.13333333333334, "series": [{"data": [[1.73254272E12, 53.666666666666664], [1.73254338E12, 51.583333333333336], [1.73254242E12, 52.86666666666667], [1.73254308E12, 46.21666666666667], [1.73254278E12, 53.56666666666667], [1.73254248E12, 53.233333333333334], [1.73254314E12, 53.63333333333333], [1.73254344E12, 48.266666666666666], [1.73254284E12, 53.583333333333336], [1.73254254E12, 53.6], [1.7325432E12, 52.53333333333333], [1.7325429E12, 53.516666666666666], [1.7325426E12, 53.81666666666667], [1.73254326E12, 52.18333333333333], [1.7325423E12, 6.483333333333333], [1.73254296E12, 53.68333333333333], [1.73254266E12, 53.43333333333333], [1.73254236E12, 82.13333333333334], [1.73254302E12, 53.516666666666666], [1.73254332E12, 51.81666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73254344E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.48333333333333334, "minX": 1.7325423E12, "maxY": 73.51666666666667, "series": [{"data": [[1.73254272E12, 44.7], [1.73254338E12, 43.016666666666666], [1.73254242E12, 44.016666666666666], [1.73254308E12, 38.483333333333334], [1.73254278E12, 44.666666666666664], [1.73254248E12, 44.4], [1.73254314E12, 44.68333333333333], [1.73254344E12, 40.45], [1.73254284E12, 44.63333333333333], [1.73254254E12, 44.666666666666664], [1.7325432E12, 43.78333333333333], [1.7325429E12, 44.61666666666667], [1.7325426E12, 44.85], [1.73254326E12, 43.46666666666667], [1.7325423E12, 5.633333333333334], [1.73254296E12, 44.71666666666667], [1.73254266E12, 44.53333333333333], [1.73254236E12, 73.51666666666667], [1.73254302E12, 44.63333333333333], [1.73254332E12, 43.2]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.73254272E12, 8.983333333333333], [1.73254338E12, 8.583333333333334], [1.73254242E12, 8.833333333333334], [1.73254308E12, 7.7], [1.73254278E12, 8.9], [1.73254248E12, 8.866666666666667], [1.73254314E12, 8.933333333333334], [1.73254344E12, 8.116666666666667], [1.73254284E12, 8.933333333333334], [1.73254254E12, 8.916666666666666], [1.7325432E12, 8.766666666666667], [1.7325429E12, 8.9], [1.7325426E12, 8.95], [1.73254326E12, 8.7], [1.7325423E12, 0.48333333333333334], [1.73254296E12, 8.966666666666667], [1.73254266E12, 8.916666666666666], [1.73254236E12, 8.666666666666666], [1.73254302E12, 8.916666666666666], [1.73254332E12, 8.633333333333333]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73254344E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.45, "minX": 1.7325423E12, "maxY": 47.46666666666667, "series": [{"data": [[1.73254272E12, 8.95], [1.73254338E12, 8.6], [1.73254242E12, 8.8], [1.73254308E12, 7.683333333333334], [1.73254278E12, 8.933333333333334], [1.73254248E12, 8.9], [1.73254314E12, 8.933333333333334], [1.73254344E12, 8.116666666666667], [1.73254284E12, 8.916666666666666], [1.73254254E12, 8.916666666666666], [1.7325432E12, 8.766666666666667], [1.7325429E12, 8.916666666666666], [1.7325426E12, 8.966666666666667], [1.73254326E12, 8.683333333333334], [1.7325423E12, 0.45], [1.73254296E12, 8.95], [1.73254266E12, 8.916666666666666], [1.73254236E12, 8.683333333333334], [1.73254302E12, 8.933333333333334], [1.73254332E12, 8.65]], "isOverall": false, "label": "HTTP Request (/)-1-success", "isController": false}, {"data": [[1.73254272E12, 8.983333333333333], [1.73254338E12, 8.583333333333334], [1.73254242E12, 8.833333333333334], [1.73254308E12, 7.7], [1.73254278E12, 8.9], [1.73254248E12, 8.866666666666667], [1.73254314E12, 8.933333333333334], [1.73254344E12, 8.116666666666667], [1.73254284E12, 8.933333333333334], [1.73254254E12, 8.916666666666666], [1.7325432E12, 8.766666666666667], [1.7325429E12, 8.9], [1.7325426E12, 8.95], [1.73254326E12, 8.7], [1.7325423E12, 0.48333333333333334], [1.73254296E12, 8.966666666666667], [1.73254266E12, 8.916666666666666], [1.73254236E12, 8.666666666666666], [1.73254302E12, 8.916666666666666], [1.73254332E12, 8.633333333333333]], "isOverall": false, "label": "HTTP Request (/)-0-success", "isController": false}, {"data": [[1.73254272E12, 8.933333333333334], [1.73254338E12, 8.616666666666667], [1.73254242E12, 8.8], [1.73254308E12, 7.7], [1.73254278E12, 8.933333333333334], [1.73254248E12, 8.866666666666667], [1.73254314E12, 8.933333333333334], [1.73254344E12, 8.116666666666667], [1.73254284E12, 8.933333333333334], [1.73254254E12, 8.95], [1.7325432E12, 8.75], [1.7325429E12, 8.933333333333334], [1.7325426E12, 8.966666666666667], [1.73254326E12, 8.7], [1.7325423E12, 0.45], [1.73254296E12, 8.933333333333334], [1.73254266E12, 8.9], [1.73254236E12, 8.683333333333334], [1.73254302E12, 8.933333333333334], [1.73254332E12, 8.633333333333333]], "isOverall": false, "label": "HTTP Request (/list)-success", "isController": false}, {"data": [[1.73254272E12, 17.883333333333333], [1.73254338E12, 17.183333333333334], [1.73254242E12, 17.616666666666667], [1.73254308E12, 15.4], [1.73254278E12, 17.866666666666667], [1.73254248E12, 17.766666666666666], [1.73254314E12, 17.883333333333333], [1.73254344E12, 16.1], [1.73254284E12, 17.85], [1.73254254E12, 17.85], [1.7325432E12, 17.516666666666666], [1.7325429E12, 17.833333333333332], [1.7325426E12, 17.95], [1.73254326E12, 17.383333333333333], [1.7325423E12, 4.283333333333333], [1.73254296E12, 17.9], [1.73254266E12, 17.816666666666666], [1.73254236E12, 47.46666666666667], [1.73254302E12, 17.833333333333332], [1.73254332E12, 17.283333333333335]], "isOverall": false, "label": "HTTP Request (/)-success", "isController": false}, {"data": [[1.73254272E12, 8.933333333333334], [1.73254338E12, 8.616666666666667], [1.73254242E12, 8.8], [1.73254308E12, 7.7], [1.73254278E12, 8.933333333333334], [1.73254248E12, 8.866666666666667], [1.73254314E12, 8.933333333333334], [1.73254344E12, 8.116666666666667], [1.73254284E12, 8.933333333333334], [1.73254254E12, 8.95], [1.7325432E12, 8.75], [1.7325429E12, 8.933333333333334], [1.7325426E12, 8.966666666666667], [1.73254326E12, 8.7], [1.7325423E12, 0.45], [1.73254296E12, 8.933333333333334], [1.73254266E12, 8.9], [1.73254236E12, 8.683333333333334], [1.73254302E12, 8.933333333333334], [1.73254332E12, 8.633333333333333]], "isOverall": false, "label": "Debug Sampler-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73254344E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.116666666666666, "minX": 1.7325423E12, "maxY": 82.18333333333334, "series": [{"data": [[1.73254272E12, 53.68333333333333], [1.73254338E12, 51.6], [1.73254242E12, 52.85], [1.73254308E12, 46.18333333333333], [1.73254278E12, 53.56666666666667], [1.73254248E12, 53.266666666666666], [1.73254314E12, 53.61666666666667], [1.73254344E12, 48.56666666666667], [1.73254284E12, 53.56666666666667], [1.73254254E12, 53.583333333333336], [1.7325432E12, 52.55], [1.7325429E12, 53.516666666666666], [1.7325426E12, 53.8], [1.73254326E12, 52.166666666666664], [1.7325423E12, 6.116666666666666], [1.73254296E12, 53.68333333333333], [1.73254266E12, 53.45], [1.73254236E12, 82.18333333333334], [1.73254302E12, 53.55], [1.73254332E12, 51.833333333333336]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73254344E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

